<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>软件推荐及注意事项</title>
      <link href="2021/02/26/%E8%BD%AF%E4%BB%B6%E6%8E%A8%E8%8D%90/"/>
      <url>2021/02/26/%E8%BD%AF%E4%BB%B6%E6%8E%A8%E8%8D%90/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="0adaf4ce9894633917c496f9167289582dd1e8444b6a91083f26f878e23a06e2"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请输入密码</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> wxy </category>
          
      </categories>
      
      
        <tags>
            
            <tag> wxy </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LeetCode:86.分隔链表</title>
      <link href="2021/02/22/86.%E5%88%86%E9%9A%94%E9%93%BE%E8%A1%A8/"/>
      <url>2021/02/22/86.%E5%88%86%E9%9A%94%E9%93%BE%E8%A1%A8/</url>
      
        <content type="html"><![CDATA[<hr><h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><p>链接：<a href="https://leetcode-cn.com/problems/partition-list/">分隔链表</a></p><p><img src= "/img/loading2.gif" data-lazy-src="https://gitee.com/MingHuifan/image/raw/master/20210222183948.png" alt="image-20210222183946741"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for singly-linked list.</span></span><br><span class="line"><span class="comment"> * public class ListNode &#123;</span></span><br><span class="line"><span class="comment"> *     int val;</span></span><br><span class="line"><span class="comment"> *     ListNode next;</span></span><br><span class="line"><span class="comment"> *     ListNode() &#123;&#125;</span></span><br><span class="line"><span class="comment"> *     ListNode(int val) &#123; this.val = val; &#125;</span></span><br><span class="line"><span class="comment"> *     ListNode(int val, ListNode next) &#123; this.val = val; this.next = next; &#125;</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br></pre></td></tr></table></figure><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><blockquote><p>创建4个变量</p><p>sH/sT：指向小于给出节点的第一个/指向最后一个<br>bH/bT：指向非小于给出节点的第一个/指向最后一个</p></blockquote><h2 id="code"><a href="#code" class="headerlink" title="code"></a>code</h2><p><img src= "/img/loading2.gif" data-lazy-src="https://gitee.com/MingHuifan/image/raw/master/20210222215234.png" alt="image-20210222215233691"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> ListNode <span class="title">partition</span><span class="params">(ListNode head, <span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (head == <span class="keyword">null</span> || head.next == <span class="keyword">null</span>) <span class="keyword">return</span> head;</span><br><span class="line">    ListNode sH = <span class="keyword">null</span>;</span><br><span class="line">    ListNode sT = <span class="keyword">null</span>;</span><br><span class="line">    ListNode bH = <span class="keyword">null</span>;</span><br><span class="line">    ListNode bT = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (head != <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (head.val &lt; x) &#123;</span><br><span class="line">            <span class="keyword">if</span> (sT == <span class="keyword">null</span>) &#123;</span><br><span class="line">                sH = head;</span><br><span class="line">                sT = head;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                sT.next = head;</span><br><span class="line">                sT = head;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (bT == <span class="keyword">null</span>) &#123;</span><br><span class="line">                bH = head;</span><br><span class="line">                bT = head;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                bT.next = head;</span><br><span class="line">                bT = head;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        head = head.next;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 此时 sT 和 bT 两者中至少有一个不为空,因此有3种情况</span></span><br><span class="line">    <span class="keyword">if</span> (sT == <span class="keyword">null</span> || bT == <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (sT == <span class="keyword">null</span>) &#123;</span><br><span class="line">            bT.next = <span class="keyword">null</span>;</span><br><span class="line">            <span class="keyword">return</span> bH;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            sT.next = <span class="keyword">null</span>;</span><br><span class="line">            <span class="keyword">return</span> sH;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        bT.next = <span class="keyword">null</span>;</span><br><span class="line">        sT.next = bH;</span><br><span class="line">        sT.next = bH;</span><br><span class="line">        <span class="keyword">return</span> sH;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h1 id="题目进阶"><a href="#题目进阶" class="headerlink" title="题目进阶"></a>题目进阶</h1><p>上面的 LeetCode 的题目等于和大于是归为一边的</p><p>进阶：将 <strong>小于 等于 大于</strong> 分别归为三段处理</p><h2 id="分析-1"><a href="#分析-1" class="headerlink" title="分析"></a>分析</h2><blockquote><p>还是和刚刚一样的思路</p><p>创建六个变量</p><p>sH/sT：指向小于给出节点的第一个/指向最后一个<br>eH/eT：指向等于给出节点的第一个/指向最后一个<br>bH/bT：指向大于于给出节点的第一个/指向最后一个</p></blockquote><h2 id="code-1"><a href="#code-1" class="headerlink" title="code"></a>code</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> ListNode <span class="title">partitionAdvanced</span><span class="params">(ListNode head, <span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line">    ListNode sH = <span class="keyword">null</span>;     <span class="comment">// 指向小于的头</span></span><br><span class="line">    ListNode sT = <span class="keyword">null</span>;     <span class="comment">// 指向小于的尾</span></span><br><span class="line">    ListNode eH = <span class="keyword">null</span>;     <span class="comment">// 指向等于的头</span></span><br><span class="line">    ListNode eT = <span class="keyword">null</span>;     <span class="comment">// 指向等于的尾</span></span><br><span class="line">    ListNode bH = <span class="keyword">null</span>;     <span class="comment">// 指向大于的头</span></span><br><span class="line">    ListNode bT = <span class="keyword">null</span>;     <span class="comment">// 指向大于的尾</span></span><br><span class="line">    ListNode next = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">while</span> (head != <span class="keyword">null</span>) &#123;</span><br><span class="line">        next = head.next;</span><br><span class="line">        head.next = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">if</span> (head.val &lt; x) &#123;</span><br><span class="line">            <span class="keyword">if</span> (sH == <span class="keyword">null</span>) &#123;</span><br><span class="line">                sH = head;</span><br><span class="line">                sT = head;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                sT.next = head;</span><br><span class="line">                sT = head;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (head.val == x) &#123;</span><br><span class="line">            <span class="keyword">if</span> (eH == <span class="keyword">null</span>) &#123;</span><br><span class="line">                eH = head;</span><br><span class="line">                eT = head;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                eT.next = head;</span><br><span class="line">                eT = head;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (bH == <span class="keyword">null</span>) &#123;</span><br><span class="line">                bH = head;</span><br><span class="line">                bT = head;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                bT.next = head;</span><br><span class="line">                bT = head;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        head = next;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (sT != <span class="keyword">null</span>) &#123;</span><br><span class="line">        sT.next = eH;</span><br><span class="line">        eT = eT == <span class="keyword">null</span> ? sT : eT;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (eT != <span class="keyword">null</span>) &#123;</span><br><span class="line">        eT.next = bH;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> sH != <span class="keyword">null</span> ? sH : eH != <span class="keyword">null</span> ? eH : bH;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="全部-code"><a href="#全部-code" class="headerlink" title="全部 code"></a>全部 code</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> LinkedList;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @ Author: 范名辉</span></span><br><span class="line"><span class="comment"> * @ Date: 2021/2/22 - 19:01</span></span><br><span class="line"><span class="comment"> * @ Description: LinkedList</span></span><br><span class="line"><span class="comment"> * @ Version: 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// https://leetcode-cn.com/problems/partition-list/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for singly-linked list.</span></span><br><span class="line"><span class="comment"> * public class ListNode &#123;</span></span><br><span class="line"><span class="comment"> * int val;</span></span><br><span class="line"><span class="comment"> * ListNode next;</span></span><br><span class="line"><span class="comment"> * ListNode() &#123;&#125;</span></span><br><span class="line"><span class="comment"> * ListNode(int val) &#123; this.val = val; &#125;</span></span><br><span class="line"><span class="comment"> * ListNode(int val, ListNode next) &#123; this.val = val; this.next = next; &#125;</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">partitionList_</span>分隔链表 </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">ListNode</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> val;</span><br><span class="line">        ListNode next;</span><br><span class="line"></span><br><span class="line">        ListNode() &#123;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        ListNode(<span class="keyword">int</span> val) &#123;</span><br><span class="line">            <span class="keyword">this</span>.val = val;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        ListNode(<span class="keyword">int</span> val, ListNode next) &#123;</span><br><span class="line">            <span class="keyword">this</span>.val = val;</span><br><span class="line">            <span class="keyword">this</span>.next = next;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">printLinkedList</span><span class="params">(ListNode head)</span> </span>&#123;</span><br><span class="line">        System.out.print(<span class="string">&quot;Linked List: &quot;</span>);</span><br><span class="line">        <span class="keyword">while</span> (head != <span class="keyword">null</span>) &#123;</span><br><span class="line">            System.out.print(head.val + <span class="string">&quot; &quot;</span>);</span><br><span class="line">            head = head.next;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">static</span> ListNode <span class="title">partition</span><span class="params">(ListNode head, <span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (head == <span class="keyword">null</span> || head.next == <span class="keyword">null</span>) <span class="keyword">return</span> head;</span><br><span class="line">        ListNode sH = <span class="keyword">null</span>;</span><br><span class="line">        ListNode sT = <span class="keyword">null</span>;</span><br><span class="line">        ListNode bH = <span class="keyword">null</span>;</span><br><span class="line">        ListNode bT = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (head != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (head.val &lt; x) &#123;</span><br><span class="line">                <span class="keyword">if</span> (sT == <span class="keyword">null</span>) &#123;</span><br><span class="line">                    sH = head;</span><br><span class="line">                    sT = head;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    sT.next = head;</span><br><span class="line">                    sT = head;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (bT == <span class="keyword">null</span>) &#123;</span><br><span class="line">                    bH = head;</span><br><span class="line">                    bT = head;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    bT.next = head;</span><br><span class="line">                    bT = head;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            head = head.next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 此时 sT 和 bT 两者中至少有一个不为空,因此有3种情况</span></span><br><span class="line">        <span class="keyword">if</span> (sT == <span class="keyword">null</span> || bT == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (sT == <span class="keyword">null</span>) &#123;</span><br><span class="line">                bT.next = <span class="keyword">null</span>;</span><br><span class="line">                <span class="keyword">return</span> bH;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                sT.next = <span class="keyword">null</span>;</span><br><span class="line">                <span class="keyword">return</span> sH;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            bT.next = <span class="keyword">null</span>;</span><br><span class="line">            sT.next = bH;</span><br><span class="line">            sT.next = bH;</span><br><span class="line">            <span class="keyword">return</span> sH;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">static</span> ListNode <span class="title">partitionAdvanced</span><span class="params">(ListNode head, <span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line">        ListNode sH = <span class="keyword">null</span>;     <span class="comment">// 指向小于的头</span></span><br><span class="line">        ListNode sT = <span class="keyword">null</span>;     <span class="comment">// 指向小于的尾</span></span><br><span class="line">        ListNode eH = <span class="keyword">null</span>;     <span class="comment">// 指向等于的头</span></span><br><span class="line">        ListNode eT = <span class="keyword">null</span>;     <span class="comment">// 指向等于的尾</span></span><br><span class="line">        ListNode bH = <span class="keyword">null</span>;     <span class="comment">// 指向大于的头</span></span><br><span class="line">        ListNode bT = <span class="keyword">null</span>;     <span class="comment">// 指向大于的尾</span></span><br><span class="line">        ListNode next = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">while</span> (head != <span class="keyword">null</span>) &#123;</span><br><span class="line">            next = head.next;</span><br><span class="line">            head.next = <span class="keyword">null</span>;</span><br><span class="line">            <span class="keyword">if</span> (head.val &lt; x) &#123;</span><br><span class="line">                <span class="keyword">if</span> (sH == <span class="keyword">null</span>) &#123;</span><br><span class="line">                    sH = head;</span><br><span class="line">                    sT = head;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    sT.next = head;</span><br><span class="line">                    sT = head;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (head.val == x) &#123;</span><br><span class="line">                <span class="keyword">if</span> (eH == <span class="keyword">null</span>) &#123;</span><br><span class="line">                    eH = head;</span><br><span class="line">                    eT = head;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    eT.next = head;</span><br><span class="line">                    eT = head;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (bH == <span class="keyword">null</span>) &#123;</span><br><span class="line">                    bH = head;</span><br><span class="line">                    bT = head;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    bT.next = head;</span><br><span class="line">                    bT = head;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            head = next;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 这次就有很多种情况了，3个尾指针必然有个不为空</span></span><br><span class="line">        <span class="comment">// 故有 C(3,3)(全不空) + C(3,2)(两空) + C(3,1)(一空) = 1+3+3=7(001,010,011,100,101,110,111)</span></span><br><span class="line">        <span class="keyword">if</span> (sT != <span class="keyword">null</span>) &#123;</span><br><span class="line">            sT.next = eH;</span><br><span class="line">            eT = eT == <span class="keyword">null</span> ? sT : eT;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (eT != <span class="keyword">null</span>) &#123;</span><br><span class="line">            eT.next = bH;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> sH != <span class="keyword">null</span> ? sH : eH != <span class="keyword">null</span> ? eH : bH;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        ListNode head = <span class="keyword">null</span>;</span><br><span class="line">        head = <span class="keyword">new</span> ListNode(<span class="number">4</span>);</span><br><span class="line">        head.next = <span class="keyword">new</span> ListNode(<span class="number">2</span>);</span><br><span class="line">        head.next.next = <span class="keyword">new</span> ListNode(<span class="number">3</span>);</span><br><span class="line">        head.next.next.next = <span class="keyword">new</span> ListNode(<span class="number">1</span>);</span><br><span class="line">        printLinkedList(head);</span><br><span class="line"><span class="comment">//        printLinkedList(partition(head, 2));</span></span><br><span class="line">        printLinkedList(partitionAdvanced(head, <span class="number">2</span>));</span><br><span class="line"></span><br><span class="line">        head = <span class="keyword">new</span> ListNode(<span class="number">3</span>);</span><br><span class="line">        head.next = <span class="keyword">new</span> ListNode(<span class="number">2</span>);</span><br><span class="line">        head.next.next = <span class="keyword">new</span> ListNode(<span class="number">6</span>);</span><br><span class="line">        head.next.next.next = <span class="keyword">new</span> ListNode(<span class="number">1</span>);</span><br><span class="line">        head.next.next.next.next = <span class="keyword">new</span> ListNode(<span class="number">4</span>);</span><br><span class="line">        printLinkedList(head);</span><br><span class="line"><span class="comment">//        printLinkedList(partition(head, 3));</span></span><br><span class="line">        printLinkedList(partitionAdvanced(head, <span class="number">3</span>));</span><br><span class="line"></span><br><span class="line">        head = <span class="keyword">new</span> ListNode(<span class="number">1</span>);</span><br><span class="line">        head.next = <span class="keyword">new</span> ListNode(<span class="number">2</span>);</span><br><span class="line">        head.next.next = <span class="keyword">new</span> ListNode(<span class="number">3</span>);</span><br><span class="line">        head.next.next.next = <span class="keyword">new</span> ListNode(<span class="number">4</span>);</span><br><span class="line">        head.next.next.next.next = <span class="keyword">new</span> ListNode(<span class="number">3</span>);</span><br><span class="line">        head.next.next.next.next.next = <span class="keyword">new</span> ListNode(<span class="number">2</span>);</span><br><span class="line">        head.next.next.next.next.next.next = <span class="keyword">new</span> ListNode(<span class="number">1</span>);</span><br><span class="line">        printLinkedList(head);</span><br><span class="line"><span class="comment">//        printLinkedList(partition(head, 3));</span></span><br><span class="line">        printLinkedList(partitionAdvanced(head, <span class="number">3</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> LeetCode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 链表 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>链表与指针</title>
      <link href="2021/02/18/%E9%93%BE%E8%A1%A8%E4%B8%8E%E6%8C%87%E9%92%88/"/>
      <url>2021/02/18/%E9%93%BE%E8%A1%A8%E4%B8%8E%E6%8C%87%E9%92%88/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="641c80f384117ad2128cd97724177127c65314330241e40acaf0b5e35f980991"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">密码是“12345678”</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 语法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一些软件配置</title>
      <link href="2021/02/18/%E5%B8%B8%E7%94%A8%E8%BD%AF%E4%BB%B6%E8%AE%BE%E7%BD%AE/"/>
      <url>2021/02/18/%E5%B8%B8%E7%94%A8%E8%BD%AF%E4%BB%B6%E8%AE%BE%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<hr><h1 id="IDEA"><a href="#IDEA" class="headerlink" title="IDEA"></a>IDEA</h1><h2 id="常用设置"><a href="#常用设置" class="headerlink" title="常用设置"></a>常用设置</h2><h3 id="设置鼠标滚轮调节字体大小"><a href="#设置鼠标滚轮调节字体大小" class="headerlink" title="设置鼠标滚轮调节字体大小"></a>设置鼠标滚轮调节字体大小</h3><p><img src= "/img/loading2.gif" data-lazy-src="https://gitee.com/MingHuifan/image/raw/master/20210205192659.png" alt="image-20210205145421119"></p><h3 id="鼠标悬浮在代码有提示"><a href="#鼠标悬浮在代码有提示" class="headerlink" title="鼠标悬浮在代码有提示"></a>鼠标悬浮在代码有提示</h3><p><img src= "/img/loading2.gif" data-lazy-src="https://gitee.com/MingHuifan/image/raw/master/20210205192838.png" alt="image-20210205192838603"></p><h3 id="自动导包和优化多余包"><a href="#自动导包和优化多余包" class="headerlink" title="自动导包和优化多余包"></a>自动导包和优化多余包</h3><p>手动导包：Ant + Enter<br>自动导包：<img src= "/img/loading2.gif" data-lazy-src="https://gitee.com/MingHuifan/image/raw/master/20210205193817.png" alt="image-20210205193548380"  /></p><h3 id="同一个包下的类，超过指定个数导包合并为"><a href="#同一个包下的类，超过指定个数导包合并为" class="headerlink" title="同一个包下的类，超过指定个数导包合并为 *"></a>同一个包下的类，超过指定个数导包合并为 *</h3><p><img src= "/img/loading2.gif" data-lazy-src="https://gitee.com/MingHuifan/image/raw/master/20210206105017.png" alt="image-20210206105012613"></p><h3 id="显示行号和方法之间分隔符"><a href="#显示行号和方法之间分隔符" class="headerlink" title="显示行号和方法之间分隔符"></a>显示行号和方法之间分隔符</h3><p><img src= "/img/loading2.gif" data-lazy-src="https://gitee.com/MingHuifan/image/raw/master/20210206105301.png" alt="image-20210206105259327"></p><h3 id="忽略大小写提示"><a href="#忽略大小写提示" class="headerlink" title="忽略大小写提示"></a>忽略大小写提示</h3><p><img src= "/img/loading2.gif" data-lazy-src="https://gitee.com/MingHuifan/image/raw/master/20210206105455.png" alt="image-20210206105451278"></p><h3 id="多个类不隐藏，多行显示"><a href="#多个类不隐藏，多行显示" class="headerlink" title="多个类不隐藏，多行显示"></a>多个类不隐藏，多行显示</h3><p><img src= "/img/loading2.gif" data-lazy-src="https://gitee.com/MingHuifan/image/raw/master/20210206110014.png" alt="image-20210206110012776"></p><h3 id="设置默认字体，大小，行间距（编辑区和控制台都会变化）"><a href="#设置默认字体，大小，行间距（编辑区和控制台都会变化）" class="headerlink" title="设置默认字体，大小，行间距（编辑区和控制台都会变化）"></a>设置默认字体，大小，行间距（编辑区和控制台都会变化）</h3><p><img src= "/img/loading2.gif" data-lazy-src="https://gitee.com/MingHuifan/image/raw/master/20210206110331.png" alt="image-20210206110330073"></p><h3 id="修改注释"><a href="#修改注释" class="headerlink" title="修改注释"></a>修改注释</h3><center class = "half"><img src = "https://gitee.com/MingHuifan/image/raw/master/20210206113813.png" width = "464" /><img src = "https://gitee.com/MingHuifan/image/raw/master/20210206114352.png" width = "464" /></center><h3 id="设置类头的文档注释信息"><a href="#设置类头的文档注释信息" class="headerlink" title="设置类头的文档注释信息"></a>设置类头的文档注释信息</h3>   <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* @ Author: xxx</span></span><br><span class="line"><span class="comment">* @ Date: $&#123;DATE&#125; - $&#123;TIME&#125;</span></span><br><span class="line"><span class="comment">* @ Description: $&#123;PACKAGE_NAME&#125;</span></span><br><span class="line"><span class="comment">* @ Version: 1.0</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><p>   <img src= "/img/loading2.gif" data-lazy-src="https://gitee.com/MingHuifan/image/raw/master/20210206115655.png" alt="image-20210206115654047"></p><h3 id="设置文件编码格式默认全选为-UTF-8"><a href="#设置文件编码格式默认全选为-UTF-8" class="headerlink" title="设置文件编码格式默认全选为 UTF-8"></a>设置文件编码格式默认全选为 UTF-8</h3><p><img src= "/img/loading2.gif" data-lazy-src="https://gitee.com/MingHuifan/image/raw/master/20210206120422.png" alt="image-20210206120420884"></p><h3 id="自动编译"><a href="#自动编译" class="headerlink" title="自动编译"></a>自动编译</h3><p><img src= "/img/loading2.gif" data-lazy-src="https://gitee.com/MingHuifan/image/raw/master/20210206120752.png" alt="image-20210206120750786"></p><h3 id="导入-jar-包"><a href="#导入-jar-包" class="headerlink" title="导入 jar 包"></a>导入 jar 包</h3><center class = "half"><img src = "https://gitee.com/MingHuifan/image/raw/master/20210206121029.png" width = "264" /><img src = "https://gitee.com/MingHuifan/image/raw/master/20210206121157.png" width = "664" /></center><h3 id="生成序列化版本号"><a href="#生成序列化版本号" class="headerlink" title="生成序列化版本号"></a>生成序列化版本号</h3><p><img src= "/img/loading2.gif" data-lazy-src="https://gitee.com/MingHuifan/image/raw/master/20210206121612.png" alt="image-20210206121610845"></p><hr><h2 id="快捷键"><a href="#快捷键" class="headerlink" title="快捷键"></a>快捷键</h2><ol><li>创建内容：Alt + Ins</li><li>main() ：psvm</li><li>复制行：Ctrl + D</li><li>删除行：Ctrl + Y</li><li>代码上/下 移动：Ctrl + Shift + Up/Dn</li><li>收缩类：Ctrl + N</li><li>生成代码：Alt + Ins (如构造器, hashcode)</li><li>百能快捷键：Alt + Enter （导包，生成变量等）</li><li>单行注释或者多行注释：Ctrl + / 、Ctrl + Shift + /</li><li>重命名：Shift + F6</li><li>for循环：fori</li><li>代码块包围：Ctrl + Alt + T</li><li>自动补全提示：Alt + /<br><img src= "/img/loading2.gif" data-lazy-src="https://gitee.com/MingHuifan/image/raw/master/20210206124238.png" alt="image-20210206124236220"></li><li>代码一层层调用：<br>点进源码：Ctrl + 鼠标悬浮 + 点进去<br>左右回退：<br><img src= "/img/loading2.gif" data-lazy-src="https://gitee.com/MingHuifan/image/raw/master/20210206124647.png" alt="image-20210206124646882"></li><li>显示代码结构：Alt + 7</li><li>显示导航：Alt + 1</li></ol>]]></content>
      
      
      <categories>
          
          <category> 软件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 记录 </tag>
            
            <tag> 软件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo-butterfly-记录</title>
      <link href="2021/02/18/Hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E8%AE%B0%E5%BD%95/"/>
      <url>2021/02/18/Hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<hr><hr><h1 id="个人博客搭建-Hexo"><a href="#个人博客搭建-Hexo" class="headerlink" title="个人博客搭建 Hexo"></a>个人博客搭建 Hexo</h1><h2 id="一、创建博客"><a href="#一、创建博客" class="headerlink" title="一、创建博客"></a>一、创建博客</h2><blockquote><p>先安装 <strong>git 和 node.js</strong></p></blockquote><blockquote><p>然后在你要保持博客的路径下执行下面命令</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> npm install -g hexo-cli   <span class="comment"># 安装hexo</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> hexo init &lt;folder&gt;<span class="comment"># 安装博客</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> &lt;folder&gt;<span class="comment"># 进入到安装博客的路径</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> npm install<span class="comment"># 安装npm</span></span></span><br></pre></td></tr></table></figure><p><img src= "/img/loading2.gif" data-lazy-src="https://gitee.com/MingHuifan/image/raw/master/20210218112216.png" alt="image-20210218112210771"></p><p><img src= "/img/loading2.gif" data-lazy-src="https://gitee.com/MingHuifan/image/raw/master/20210218111819.png" alt="image-20210218111818131"></p><blockquote><p>然后进入到 xiaofanBlog/ 修改文件</p></blockquote><img src= "/img/loading2.gif" data-lazy-src="https://gitee.com/MingHuifan/image/raw/master/20210218113450.png" alt="image-20210218113449005" style="zoom:150%;" /><p><img src= "/img/loading2.gif" data-lazy-src="https://gitee.com/MingHuifan/image/raw/master/20210218112801.png" alt="image-20210218112759252"></p><blockquote><p>然后执行命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt;$ npm install hexo-deployer-git --save</span><br><span class="line">&gt;$ hexo d</span><br></pre></td></tr></table></figure><p><img src= "/img/loading2.gif" data-lazy-src="https://gitee.com/MingHuifan/image/raw/master/20210218113755.png" alt="image-20210218113752927"></p></blockquote><p>如果不行重新输入 hexo d</p><p><img src= "/img/loading2.gif" data-lazy-src="https://gitee.com/MingHuifan/image/raw/master/20210218114336.png" alt="image-20210218114333983"></p><blockquote><p>上面就已经上传到了github仓库了</p><p>下面就是怎么修改主题</p></blockquote><hr><h2 id="二、修改主题"><a href="#二、修改主题" class="headerlink" title="二、修改主题"></a>二、修改主题</h2><p>从 hexo<strong>主题</strong> 官网下载主题，直接 git clone 即可</p><p>然后就是把主题放到博客文件夹 themes里面，重命名</p><p>然后在 _config.yml 中修改主题（注意名称要和 themes 里面的主题文件夹一致）</p><p><img src= "/img/loading2.gif" data-lazy-src="https://gitee.com/MingHuifan/image/raw/master/20210218142237.png" alt="image-20210218142059021"></p><p>保存之后用重新部署一下如图</p><img src= "/img/loading2.gif" data-lazy-src="https://gitee.com/MingHuifan/image/raw/master/20210218142514.png" alt="image-20210218142512671"  /><p>如果出现了下面这个问题</p><img src= "/img/loading2.gif" data-lazy-src="https://gitee.com/MingHuifan/image/raw/master/20210218142548.png" alt="image-20210218142546760" style="zoom:80%;" /><p>解决方案输入下面命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> npm install hexo-renderer-pug hexo-renderer-stylus --save</span></span><br></pre></td></tr></table></figure><p>清理缓存代码</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> hexo clean</span></span><br></pre></td></tr></table></figure><hr><h2 id="三、主题美化"><a href="#三、主题美化" class="headerlink" title="三、主题美化"></a>三、主题美化</h2><h3 id="标签页"><a href="#标签页" class="headerlink" title="标签页"></a>标签页</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> hexo n page tags</span></span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">然后找到source/tags/index.md文件</span><br><span class="line">修改为</span><br><span class="line">---</span><br><span class="line">title: 標籤</span><br><span class="line">date: 2018-01-05 00:00:00 # 不动</span><br><span class="line">type: &quot;tags&quot;</span><br><span class="line">top_img: # 图片</span><br><span class="line">---</span><br></pre></td></tr></table></figure><h3 id="分类页"><a href="#分类页" class="headerlink" title="分类页"></a>分类页</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> hexo n page categories</span></span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">同样找到source/categories/index.md文件</span><br><span class="line">修改为</span><br><span class="line">---</span><br><span class="line">title: 分類</span><br><span class="line">date: 2018-01-05 00:00:00</span><br><span class="line">type: &quot;categories&quot;</span><br><span class="line">---</span><br></pre></td></tr></table></figure><h3 id="代码主题和能否Copy"><a href="#代码主题和能否Copy" class="headerlink" title="代码主题和能否Copy"></a>代码主题和能否Copy</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 主题配置文件</span></span><br><span class="line">highlight_theme: pale night #  darker / pale night / light / ocean / mac / mac light / false</span><br><span class="line">highlight_copy: true # 能否复制</span><br><span class="line">highlight_lang: true # show the code language</span><br><span class="line">highlight_shrink: false # true 全部代碼框不展開，需点击&gt;打開false 代碼狂展開，有&gt;點擊按鈕 none 不顯示&gt;按鈕</span><br><span class="line">code_word_wrap: false # 代码换行</span><br></pre></td></tr></table></figure><h3 id="主页标签页等图片设置"><a href="#主页标签页等图片设置" class="headerlink" title="主页标签页等图片设置"></a>主页标签页等图片设置</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">// 主题配置文件</span><br><span class="line"><span class="meta">#</span><span class="bash"> Disable all banner image</span></span><br><span class="line">disable_top_img: false # 显示顶部图为 false</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 顶部图</span></span><br><span class="line">index_img: /img/背景.jpg</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 默认的top_img，当页面的top_img 没有配置时，会显示default_top_img</span></span><br><span class="line">default_top_img:</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 归档页面的top_img</span></span><br><span class="line">archive_img:</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> tag 子页面的默认top_img</span></span><br><span class="line">tag_img:</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> tag 子页面的top_img，可配置每个 tag 的 top_img</span></span><br><span class="line"><span class="meta">#</span><span class="bash">  - tag name: xxxxx</span></span><br><span class="line">tag_per_img:</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> category 子页面的默认top_img</span></span><br><span class="line">category_img:</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> category 子页面的top_img，可配置每个category 的top_img</span></span><br><span class="line"><span class="meta">#</span><span class="bash">  - category name: xxxxx</span></span><br><span class="line">category_per_img:</span><br></pre></td></tr></table></figure><h3 id="文章图片设置"><a href="#文章图片设置" class="headerlink" title="文章图片设置"></a>文章图片设置</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 主题配置文件</span></span><br><span class="line">cover:</span><br><span class="line"><span class="meta">  #</span><span class="bash"> display the cover or not (是否顯示文章封面)</span></span><br><span class="line">  index_enable: true # 在主页</span><br><span class="line">  aside_enable: true # 在文章页</span><br><span class="line">  archives_enable: true</span><br><span class="line"><span class="meta">  #</span><span class="bash"> the position of cover <span class="keyword">in</span> home page (封面顯示的位置)</span></span><br><span class="line"><span class="meta">  #</span><span class="bash"> left/right/both</span></span><br><span class="line">  position: left # 图片在左边</span><br><span class="line"><span class="meta">  #</span><span class="bash"> When cover is not <span class="built_in">set</span>, the default cover is displayed (當沒有設置cover時，默認的封面顯示)</span></span><br><span class="line">  default_cover:</span><br><span class="line">    #- https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg</span><br></pre></td></tr></table></figure><h3 id="文章在主页展示的字数"><a href="#文章在主页展示的字数" class="headerlink" title="文章在主页展示的字数"></a>文章在主页展示的字数</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 主题配置文件</span></span><br><span class="line">index_post_content:</span><br><span class="line">  method: 3</span><br><span class="line">  length: 200 # 预览多少。0 就没有了</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>如200</p><p><img src= "/img/loading2.gif" data-lazy-src="https://gitee.com/MingHuifan/image/raw/master/20210220094718.png" alt="image-20210220094717060"></p><h3 id="文章置顶"><a href="#文章置顶" class="headerlink" title="文章置顶"></a>文章置顶</h3><blockquote><p>直接在文章的front-matter区域里添加sticky: 1属性来把这篇文章置顶。数值越大，置顶的优先级越大。</p></blockquote><h3 id="文章主页和阅读页显示"><a href="#文章主页和阅读页显示" class="headerlink" title="文章主页和阅读页显示"></a>文章主页和阅读页显示</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">// 主题配置</span><br><span class="line">post_meta:</span><br><span class="line">  page: # Home Page</span><br><span class="line">    date_type: both # created or updated or both 主頁文章日期是創建日或者更新日或都顯示</span><br><span class="line">    date_format: date # date/relative 顯示日期還是相對日期</span><br><span class="line">    categories: true # true or false 主頁是否顯示分類</span><br><span class="line">    tags: true # true or false 主頁是否顯示標籤</span><br><span class="line">    label: true # true or false 顯示描述性文字</span><br><span class="line">  post:</span><br><span class="line">    date_type: both # created or updated or both 文章頁日期是創建日或者更新日或都顯示</span><br><span class="line">    date_format: date # date/relative 顯示日期還是相對日期</span><br><span class="line">    categories: true # true or false 文章頁是否顯示分類</span><br><span class="line">    tags: true # true or false 文章頁是否顯示標籤</span><br><span class="line">    label: true # true or false 顯示描述性文字</span><br></pre></td></tr></table></figure><h3 id="文章阅读页显示目录"><a href="#文章阅读页显示目录" class="headerlink" title="文章阅读页显示目录"></a>文章阅读页显示目录</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 主题配置文件</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> toc (目錄)</span></span><br><span class="line">toc:</span><br><span class="line">  enable: true</span><br><span class="line">  number: true</span><br><span class="line">  style_simple: false</span><br></pre></td></tr></table></figure><p><img src= "/img/loading2.gif" data-lazy-src="https://gitee.com/MingHuifan/image/raw/master/20210220104649.png" alt="image-20210220104648888"></p><blockquote><p>特定文章也可以设定是否显示目录</p><p>在文章头部添加</p><p>toc_number和toc，配置为 true 和 false</p></blockquote><h3 id="相关文章"><a href="#相关文章" class="headerlink" title="相关文章"></a>相关文章</h3><blockquote><p>相关文章推荐的原理是根据文章tags的比重来推荐</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 主题配置文件</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Related Articles</span></span><br><span class="line">related_post:</span><br><span class="line">  enable: true</span><br><span class="line">  limit: 5 # 篇数</span><br><span class="line">  date_type: created # or created or updated 文章日期顯示創建日或者更新日</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="文章描点"><a href="#文章描点" class="headerlink" title="文章描点"></a>文章描点</h3><blockquote><p>开启文章锚点后，当你在文章页进行滚动时，文章链接会根据标题ID进行替换<br>(注意:每替换一次，会留下一个历史记录。所以如果一篇文章有很多锚点的话，网页的历史记录会很多。)</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 主题配置文件</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> anchor</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> when you scroll <span class="keyword">in</span> post, the URL will update according to header id.</span></span><br><span class="line">anchor: true</span><br></pre></td></tr></table></figure><h3 id="文章编辑按钮"><a href="#文章编辑按钮" class="headerlink" title="文章编辑按钮"></a>文章编辑按钮</h3><blockquote><p>在文章标题旁边显示一个编辑按钮，点击会跳转到对应的链接去。</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 主题配置文件</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Post edit</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Easily browse and edit blog <span class="built_in">source</span> code online.</span></span><br><span class="line">post_edit:</span><br><span class="line">  enable: true</span><br><span class="line"><span class="meta">  #</span><span class="bash"> url: https://github.com/755400668/755400668.github/edit/main/<span class="built_in">source</span>/</span></span><br><span class="line"><span class="meta">  #</span><span class="bash"> For example: https://github.com/jerryc127/butterfly.js.org/edit/main/<span class="built_in">source</span>/</span></span><br><span class="line">  url: https://github.com/755400668/755400668.github/edit/main/source/</span><br></pre></td></tr></table></figure><h3 id="文章版权"><a href="#文章版权" class="headerlink" title="文章版权"></a>文章版权</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> </span></span><br><span class="line">post_copyright:</span><br><span class="line">  enable: true</span><br><span class="line">  decode: true # 显示中文网址</span><br><span class="line">  license: CC BY-NC-SA 4.0</span><br><span class="line">  license_url: https://creativecommons.org/licenses/by-nc-sa/4.0/</span><br></pre></td></tr></table></figure><p>如果想要某偏文章不显示版权，在文章标题添加<strong>copyright: false</strong> 即可</p><p><img src= "/img/loading2.gif" data-lazy-src="https://gitee.com/MingHuifan/image/raw/master/20210220103922.png" alt="image-20210220103920494"></p><h3 id="文章打赏"><a href="#文章打赏" class="headerlink" title="文章打赏"></a>文章打赏</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 主题配置文件</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Sponsor/reward</span></span><br><span class="line">reward:</span><br><span class="line">  enable: true</span><br><span class="line">  QR_code:</span><br><span class="line">    - img: /img/wechat.jpg</span><br><span class="line">      link:</span><br><span class="line">      text: wechat</span><br><span class="line">    - img: /img/alipay.jpg</span><br><span class="line">      link:</span><br><span class="line">      text: alipay</span><br></pre></td></tr></table></figure><h3 id="头像"><a href="#头像" class="headerlink" title="头像"></a>头像</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 主题配置文件</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Avatar (頭像)</span></span><br><span class="line">avatar:</span><br><span class="line">  img: /img/wechat.gif</span><br><span class="line">  effect: false # 转圈</span><br></pre></td></tr></table></figure><h3 id="网站内容是否可以复制"><a href="#网站内容是否可以复制" class="headerlink" title="网站内容是否可以复制"></a>网站内容是否可以复制</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 主题配置文件</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> copy settings</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> copyright: Add the copyright information after copied content (複製的內容後面加上版權信息)</span></span><br><span class="line">copy:</span><br><span class="line">  enable: true</span><br><span class="line">  copyright:</span><br><span class="line">    enable: true</span><br><span class="line">    limit_count: 500</span><br></pre></td></tr></table></figure><p><img src= "/img/loading2.gif" data-lazy-src="https://gitee.com/MingHuifan/image/raw/master/20210220110231.png" alt="image-20210220110230870"></p><h3 id="页脚设置"><a href="#页脚设置" class="headerlink" title="页脚设置"></a>页脚设置</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 主题配置文件</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Footer Settings</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> --------------------------------------</span></span><br><span class="line">footer:</span><br><span class="line">  owner:</span><br><span class="line">    enable: true</span><br><span class="line">    since: 2021</span><br><span class="line">  custom_text: 愿世间美好与你环环相扣</span><br><span class="line">  copyright: true # Copyright of theme and framework</span><br></pre></td></tr></table></figure><h3 id="夜间模式"><a href="#夜间模式" class="headerlink" title="夜间模式"></a>夜间模式</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 主题配置文件</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> dark mode</span></span><br><span class="line">darkmode:</span><br><span class="line">  enable: true</span><br><span class="line"><span class="meta">  #</span><span class="bash"> Toggle Button to switch dark/light mode</span></span><br><span class="line">  button: true</span><br><span class="line"><span class="meta">  #</span><span class="bash"> Switch dark/light mode automatically (自動切換 dark mode和 light mode)</span></span><br><span class="line"><span class="meta">  #</span><span class="bash"> autoChangeMode: 1  Following System Settings, <span class="keyword">if</span> the system doesn<span class="string">&#x27;t support dark mode, it will switch dark mode between 6 pm to 6 am</span></span></span><br><span class="line"><span class="meta">  #</span><span class="bash"> autoChangeMode: 2  Switch dark mode between 6 pm to 6 am</span></span><br><span class="line"><span class="meta">  #</span><span class="bash"> autoChangeMode: <span class="literal">false</span></span></span><br><span class="line">  autoChangeMode: 1</span><br></pre></td></tr></table></figure><p><img src= "/img/loading2.gif" data-lazy-src="https://gitee.com/MingHuifan/image/raw/master/20210220110817.png" alt="image-20210220110816979"></p><h3 id="阅读模式"><a href="#阅读模式" class="headerlink" title="阅读模式"></a>阅读模式</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 主题配置文件</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Read Mode (閲讀模式)</span></span><br><span class="line">readmode: true</span><br></pre></td></tr></table></figure><h3 id="字体大小"><a href="#字体大小" class="headerlink" title="字体大小"></a>字体大小</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 主题配置文件</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Bottom right button (右下角按鈕)</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Change font size</span></span><br><span class="line">change_font_size: true</span><br></pre></td></tr></table></figure><h3 id="访问人数"><a href="#访问人数" class="headerlink" title="访问人数"></a>访问人数</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 主题配置文件</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> busuanzi count <span class="keyword">for</span> PV / UV <span class="keyword">in</span> site</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 訪問人數</span></span><br><span class="line">busuanzi:</span><br><span class="line">  site_uv: true</span><br><span class="line">  site_pv: true</span><br><span class="line">  page_pv: true</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="侧边栏"><a href="#侧边栏" class="headerlink" title="侧边栏"></a>侧边栏</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 主题配置文件</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> aside (側邊欄)</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> --------------------------------------</span></span><br><span class="line"></span><br><span class="line">aside:</span><br><span class="line">  enable: true</span><br><span class="line">  hide: false</span><br><span class="line">  button: true</span><br><span class="line">  mobile: true # display on mobile</span><br><span class="line">  position: right # 右边显示</span><br><span class="line"><span class="meta">  #</span><span class="bash"> 头像卡片</span></span><br><span class="line">  card_author:</span><br><span class="line">    enable: true</span><br><span class="line">    description:</span><br><span class="line">    button:</span><br><span class="line">      enable: true</span><br><span class="line">      icon: fab fa-github</span><br><span class="line">      text: Github</span><br><span class="line">      link: https://github.com/755400668</span><br><span class="line"><span class="meta">  #</span><span class="bash"> 公告卡片</span></span><br><span class="line">  card_announcement:</span><br><span class="line">    enable: true</span><br><span class="line">    content: 欢迎来到灰灰爱吃小云朵的博客</span><br><span class="line"></span><br><span class="line">  card_recent_post:</span><br><span class="line">    enable: true</span><br><span class="line">    limit: 5 # if set 0 will show all</span><br><span class="line">    sort: date # date or updated</span><br><span class="line">    sort_order: # Don&#x27;t modify the setting unless you know how it works</span><br><span class="line"><span class="meta">  #</span><span class="bash"> 分类卡片</span></span><br><span class="line">  card_categories:</span><br><span class="line">    enable: true</span><br><span class="line">    limit: 8 # if set 0 will show all</span><br><span class="line">    expand: none # none/true/false</span><br><span class="line">    sort_order: # Don&#x27;t modify the setting unless you know how it works</span><br><span class="line"><span class="meta">  #</span><span class="bash"> 标签卡片</span></span><br><span class="line">  card_tags:</span><br><span class="line">    enable: true</span><br><span class="line">    limit: 40 # if set 0 will show all</span><br><span class="line">    color: true</span><br><span class="line">    sort_order: # Don&#x27;t modify the setting unless you know how it works</span><br><span class="line">  card_archives:</span><br><span class="line">    enable: true</span><br><span class="line">    type: monthly # yearly or monthly</span><br><span class="line">    format: MMMM YYYY # eg: YYYY年MM月</span><br><span class="line">    order: -1 # Sort of order. 1, asc for ascending; -1, desc for descending</span><br><span class="line">    limit: 8 # if set 0 will show all</span><br><span class="line">    sort_order: # Don&#x27;t modify the setting unless you know how it works</span><br><span class="line">  card_webinfo:</span><br><span class="line">    enable: false</span><br><span class="line">    post_count: true</span><br><span class="line">    last_push_date: true</span><br><span class="line">    sort_order: # Don&#x27;t modify the setting unless you know how it works</span><br></pre></td></tr></table></figure><h3 id="访问人数-1"><a href="#访问人数-1" class="headerlink" title="访问人数"></a>访问人数</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 主题配置文件</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> busuanzi count <span class="keyword">for</span> PV / UV <span class="keyword">in</span> site</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 訪問人數</span></span><br><span class="line">busuanzi:</span><br><span class="line">  site_uv: true</span><br><span class="line">  site_pv: true</span><br><span class="line">  page_pv: true</span><br></pre></td></tr></table></figure><h3 id="网站运行时间"><a href="#网站运行时间" class="headerlink" title="网站运行时间"></a>网站运行时间</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 主题配置文件</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Time difference between publish date and now (網頁運行時間)</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Formal: Month/Day/Year Time or Year/Month/Day Time</span></span><br><span class="line">runtimeshow:</span><br><span class="line">  enable: true</span><br><span class="line">  publish_date: 02/18/2021</span><br></pre></td></tr></table></figure><h3 id="Tag-hide"><a href="#Tag-hide" class="headerlink" title="Tag-hide"></a>Tag-hide</h3><p><img src= "/img/loading2.gif" data-lazy-src="https://gitee.com/MingHuifan/image/raw/master/20210220112432.png" alt="image-20210220112431535"></p><p><img src= "/img/loading2.gif" data-lazy-src="https://gitee.com/MingHuifan/image/raw/master/20210220112517.png" alt="image-20210220112516336"></p><p><img src= "/img/loading2.gif" data-lazy-src="https://gitee.com/MingHuifan/image/raw/master/20210220112533.png" alt="image-20210220112530047"></p><h3 id="评论"><a href="#评论" class="headerlink" title="评论"></a>评论</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 主题配置文件</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> gitalk</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> https://github.com/gitalk/gitalk</span></span><br><span class="line">gitalk:</span><br><span class="line">  client_id: aa776ef94071498f6753</span><br><span class="line">  client_secret: 1cbad93b480c8980863bbfcf1fd8926c2fdd9863</span><br><span class="line">  repo: 755400668.github.io</span><br><span class="line">  owner: 755400668</span><br><span class="line">  admin: 755400668</span><br><span class="line">  language: zh-CN # en, zh-CN, zh-TW, es-ES, fr, ru</span><br><span class="line">  perPage: 10 # Pagination size, with maximum 100.</span><br><span class="line">  distractionFreeMode: false # Facebook-like distraction free mode.</span><br><span class="line">  pagerDirection: last # Comment sorting direction, available values are last and first.</span><br><span class="line">  createIssueManually: false # Gitalk will create a corresponding github issue for your every single page automatically</span><br></pre></td></tr></table></figure><h3 id="搜索"><a href="#搜索" class="headerlink" title="搜索"></a>搜索</h3><p>先安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-search --save</span><br></pre></td></tr></table></figure><p>然后主题配置文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Local search</span></span><br><span class="line">local_search:</span><br><span class="line">  enable: true</span><br></pre></td></tr></table></figure><h3 id="UI颜色"><a href="#UI颜色" class="headerlink" title="UI颜色"></a>UI颜色</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 主题配置文件</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> theme_color:</span></span><br><span class="line">  enable: true</span><br><span class="line">  main: &quot;#49B1F5&quot;</span><br><span class="line">  paginator: &quot;#00c4b6&quot;</span><br><span class="line">  button_hover: &quot;#FF7242&quot;</span><br><span class="line">  text_selection: &quot;#00c4b6&quot;</span><br><span class="line">  link_color: &quot;#99a9bf&quot;</span><br><span class="line">  meta_color: &quot;#858585&quot;</span><br><span class="line">  hr_color: &quot;#A4D8FA&quot;</span><br><span class="line">  code_foreground: &quot;#F47466&quot;</span><br><span class="line">  code_background: &quot;rgba(27, 31, 35, .05)&quot;</span><br><span class="line">  toc_color: &quot;#00c4b6&quot;</span><br><span class="line">  blockquote_padding_color: &quot;#49b1f5&quot;</span><br><span class="line">  blockquote_background_color: &quot;#49b1f5&quot;</span><br></pre></td></tr></table></figure><h3 id="图片加载动画"><a href="#图片加载动画" class="headerlink" title="图片加载动画"></a>图片加载动画</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 主题配置文件</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Lazyload (圖片懶加載)</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> https://github.com/verlok/lazyload</span></span><br><span class="line">lazyload:</span><br><span class="line">  enable: true</span><br><span class="line">  post: /img/loading1.gif</span><br></pre></td></tr></table></figure><h3 id="网站背景"><a href="#网站背景" class="headerlink" title="网站背景"></a>网站背景</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 主题配置文件</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Website Background (設置網站背景)</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> can <span class="built_in">set</span> it to color or image (可設置圖片 或者 顔色)</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> The formal of image: url(http://xxxxxx.com/xxx.jpg)</span></span><br><span class="line">background:</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 页脚显示和首页一样</span></span><br><span class="line">footer_bg: true</span><br></pre></td></tr></table></figure><h3 id="鼠标聚集几何图形"><a href="#鼠标聚集几何图形" class="headerlink" title="鼠标聚集几何图形"></a>鼠标聚集几何图形</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 主题配置文件</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> canvas_nest</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> https://github.com/hustcc/canvas-nest.js</span></span><br><span class="line">canvas_nest:</span><br><span class="line">  enable: true</span><br><span class="line">  color: &#x27;0,0,255&#x27; #color of lines, default: &#x27;0,0,0&#x27;; RGB values: (R,G,B).(note: use &#x27;,&#x27; to separate.)</span><br><span class="line">  opacity: 0.7 # the opacity of line (0~1), default: 0.5.</span><br><span class="line">  zIndex: -1 # z-index property of the background, default: -1.</span><br><span class="line">  count: 199 # the number of lines, default: 99.</span><br><span class="line">  mobile: true</span><br></pre></td></tr></table></figure><h3 id="鼠标点击效果"><a href="#鼠标点击效果" class="headerlink" title="鼠标点击效果"></a>鼠标点击效果</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 主题配置</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Mouse click effects: Heart symbol (鼠標點擊效果: 愛心)</span></span><br><span class="line">click_heart:</span><br><span class="line">  enable: true</span><br><span class="line">  mobile: true</span><br></pre></td></tr></table></figure><h3 id="页面美化"><a href="#页面美化" class="headerlink" title="页面美化"></a>页面美化</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 主题配置</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Default display mode (網站默認的顯示模式)</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> light (default) / dark</span></span><br><span class="line">display_mode: light</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Beautify (美化頁面顯示)</span></span><br><span class="line">beautify:</span><br><span class="line">  enable: true</span><br><span class="line"><span class="meta">  #</span><span class="bash"> post 只在文章頁生效</span></span><br><span class="line"><span class="meta">  #</span><span class="bash"> site 在全站生效</span></span><br><span class="line">  field: sist # site/post</span><br><span class="line">  title-prefix-icon: &#x27;\f0c1&#x27;</span><br><span class="line">  title-prefix-icon-color: &#x27;#F47466&#x27;</span><br></pre></td></tr></table></figure><h3 id="主页打字"><a href="#主页打字" class="headerlink" title="主页打字"></a>主页打字</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 主题配置</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> the subtitle on homepage (主頁subtitle)</span></span><br><span class="line">subtitle:</span><br><span class="line">  enable: true</span><br><span class="line"><span class="meta">  #</span><span class="bash"> Typewriter Effect (打字效果)</span></span><br><span class="line">  effect: true</span><br><span class="line"><span class="meta">  #</span><span class="bash"> loop (循環打字)</span></span><br><span class="line">  loop: true</span><br><span class="line"><span class="meta">  #</span><span class="bash"> <span class="built_in">source</span>調用第三方服務</span></span><br><span class="line"><span class="meta">  #</span><span class="bash"><span class="built_in">source</span>: <span class="literal">true</span> <span class="comment"># 關閉調用</span></span></span><br><span class="line">  source: 1 # 調用搏天api的隨機語錄（簡體）</span><br><span class="line"><span class="meta">  #</span><span class="bash"> <span class="built_in">source</span>: 2  調用一言網的一句話（簡體）</span></span><br><span class="line"><span class="meta">  #</span><span class="bash"> <span class="built_in">source</span>: 3  調用一句網（簡體）</span></span><br><span class="line"><span class="meta">  #</span><span class="bash"> <span class="built_in">source</span>: 4  調用今日詩詞（簡體）</span></span><br><span class="line"><span class="meta">  #</span><span class="bash"> subtitle 會先顯示 <span class="built_in">source</span> , 再顯示 sub 的內容</span></span><br><span class="line"><span class="meta">  #</span><span class="bash"><span class="built_in">source</span>: <span class="literal">false</span></span></span><br><span class="line"><span class="meta">  #</span><span class="bash"> 如果有英文逗號<span class="string">&#x27; , &#x27;</span>,請使用轉義字元 &amp;<span class="comment">#44;</span></span></span><br><span class="line"><span class="meta">  #</span><span class="bash"> 如果有英文雙引號<span class="string">&#x27; &quot; &#x27;</span>,請使用轉義字元 &amp;quot;</span></span><br><span class="line"><span class="meta">  #</span><span class="bash"> 開頭不允許轉義字元，如需要，請把整個句子用雙引號包住</span></span><br><span class="line"><span class="meta">  #</span><span class="bash"> 如果關閉打字效果，subtitle只會顯示sub的第一行文字</span></span><br><span class="line">  sub: </span><br></pre></td></tr></table></figure><h3 id="PWA"><a href="#PWA" class="headerlink" title="PWA"></a>PWA</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-offline --save</span><br></pre></td></tr></table></figure><h3 id="字数统计"><a href="#字数统计" class="headerlink" title="字数统计"></a>字数统计</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-wordcount --save</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 主题配置</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> wordcount (字數統計)</span></span><br><span class="line">wordcount:</span><br><span class="line">  enable: true</span><br><span class="line">  post_wordcount: true</span><br><span class="line">  min2read: true</span><br><span class="line">  total_wordcount: true</span><br></pre></td></tr></table></figure><h3 id="图片放大模式"><a href="#图片放大模式" class="headerlink" title="图片放大模式"></a>图片放大模式</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 主题配置</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Lightbox (圖片大圖查看模式)</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> --------------------------------------</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> You can only choose one, or neither (只能選擇一個 或者 兩個都不選)</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> medium-zoom</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> https://github.com/francoischalifour/medium-zoom</span></span><br><span class="line">medium_zoom: false</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> fancybox</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> http://fancyapps.com/fancybox/3/</span></span><br><span class="line">fancybox: true</span><br></pre></td></tr></table></figure><h3 id="弹窗"><a href="#弹窗" class="headerlink" title="弹窗"></a>弹窗</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 主题配置</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Snackbar (Toast Notification 彈窗)</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> https://github.com/polonel/SnackBar</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> position 彈窗位置</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 可選 top-left / top-center / top-right / bottom-left / bottom-center / bottom-right</span></span><br><span class="line">snackbar:</span><br><span class="line">  enable: true</span><br><span class="line">  position: bottom-left</span><br><span class="line">  bg_light: &#x27;#ffc0cb&#x27; # The background color of Toast Notification in light mode</span><br><span class="line">  bg_dark: &#x27;#121212&#x27; # The background color of Toast Notification in dark mode</span><br></pre></td></tr></table></figure><h3 id="修改背景"><a href="#修改背景" class="headerlink" title="修改背景"></a>修改背景</h3><ol><li><p>引入一个新的 CSS 文件</p></li><li><p>使用 js 文件</p><p> 但是会在一定程度上延缓网页的加载时间，且修改复杂</p></li></ol><p><strong>下面使用第一种方案</strong></p><ol><li><p>\themes\hexo-theme-butterfly\source\css<br> 目录下新建 <strong>background.css</strong> </p><blockquote><p>或者你可以在 css 目录下创建一个自己写的新文件夹如（mycss），然后在该目录下创建<strong>background.css</strong> </p></blockquote></li><li><p>编辑<br> butterfly 主题的背景 div 的 id 是 <strong>web_bg</strong> </p><ul><li><p>修改为图片</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">web_bg &#123;</span></span><br><span class="line">  /* 背景图像的地址（url括号里）  */</span><br><span class="line">  background: url();</span><br><span class="line">  /* 背景图像不重复 */</span><br><span class="line">  background-repeat: no-repeat;</span><br><span class="line">  /* 背景图像大小 */</span><br><span class="line">  background-size: cover;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 关于 background 更多用法：https://developer.mozilla.org/zh-CN/docs/Web/CSS/background</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 关于 background-repeat 更多用法：https://developer.mozilla.org/zh-CN/docs/Web/CSS/background-repeat</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 关于 background-size 更多用法：https://developer.mozilla.org/zh-CN/docs/Web/CSS/background-size</span></span><br></pre></td></tr></table></figure></li><li><p>修改为渐变背景（如下几种）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># 蓝红色渐变</span><br><span class="line">#web_bg &#123;</span><br><span class="line">  &#x2F;* webkit内核 5.1 - 6.0 *&#x2F;</span><br><span class="line">  background: -webkit-linear-gradient(left, red, blue);</span><br><span class="line">  &#x2F;* Opera 11.1 - 12.0 *&#x2F;</span><br><span class="line">  background: -o-linear-gradient(right, red, blue);</span><br><span class="line">  &#x2F;* Firefox 3.6 - 15 *&#x2F;</span><br><span class="line">  background: -moz-linear-gradient(right, red, blue);</span><br><span class="line">  &#x2F;* 标准的语法 *&#x2F;</span><br><span class="line">  background: linear-gradient(to right, red, blue);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">web_bg &#123;</span></span><br><span class="line">    background: linear-gradient(102.7deg,#fddaff 8.2%,#dfadfc 19.6%,#adcdfc 36.8%,#adfcf4 73.2%,#caf8d0 90.9%);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 紫蓝色渐变</span></span><br><span class="line"><span class="meta">#</span><span class="bash">web_bg &#123;</span></span><br><span class="line">    background: linear-gradient(to right bottom, rgb(0, 255, 240), rgb(92, 159, 247) 40%, rgb(211, 34, 255) 80%);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 图片滤镜渐变</span></span><br><span class="line"><span class="meta">#</span><span class="bash">web_bg&#123;</span></span><br><span class="line">    background-image: url(&quot;https://ae01.alicdn.com/kf/H18a4b998752a4ae68b8e85d432a5aef0l.png&quot;), linear-gradient(60deg, rgba(255, 165, 150, 0.5) 5%, rgba(0, 228, 255, 0.35)), url(&quot;https://ae01.alicdn.com/kf/H21b5f6b8496141a1979a33666e1074d9x.jpg&quot;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>更多的渐变网址</p><p><a href="https://webgradients.com/">https://webgradients.com/</a></p><p><a href="https://www.grabient.com/">https://www.grabient.com/</a></p></blockquote></li></ul></li><li><p>最后将文件引入</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 主题配置文件</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Inject</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Insert the code to head (before <span class="string">&#x27;&lt;/head&gt;&#x27;</span> tag) and the bottom (before <span class="string">&#x27;&lt;/body&gt;&#x27;</span> tag)</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 插入代码到头部 &lt;/head&gt; 之前 和 底部 &lt;/body&gt; 之前</span></span><br><span class="line">inject:</span><br><span class="line">  head:</span><br><span class="line">    - &lt;link rel=&quot;stylesheet&quot; href=&quot;/css/mycss/background.css&quot;&gt;</span><br><span class="line">  bottom:</span><br><span class="line">    # - &lt;script src=&quot;xxxx&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><p> <img src= "/img/loading2.gif" data-lazy-src="https://gitee.com/MingHuifan/image/raw/master/20210221120248.png" alt="image-20210221120247170"></p></li></ol><blockquote><p>如果没有生效的话修改如下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"><span class="comment"># 主题配置文件</span></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"><span class="comment"># Website Background (設置網站背景)</span></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"><span class="comment"># can set it to color or image (可設置圖片 或者 顔色)</span></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"><span class="comment"># The formal of image: url(http://xxxxxx.com/xxx.jpg)</span></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">background: <span class="string">&quot;#efefef&quot;</span></span></span><br></pre></td></tr></table></figure></blockquote><h3 id="修改页脚"><a href="#修改页脚" class="headerlink" title="修改页脚"></a>修改页脚</h3><blockquote><p>同样的和上面修改背景一样，新建一个css文件如我的</p></blockquote><p><img src= "/img/loading2.gif" data-lazy-src="https://gitee.com/MingHuifan/image/raw/master/20210221122105.png" alt="image-20210221122103774"></p><blockquote><p>下面在某博主上面看到两种样式</p></blockquote><ul><li><p>渐变</p>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">/* 页脚footer */</span><br><span class="line">/* 渐变色滚动动画 */</span><br><span class="line">@-webkit-keyframes Gradient &#123;</span><br><span class="line">    0% &#123;</span><br><span class="line">        background-position: 0 50%;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    50% &#123;</span><br><span class="line">        background-position: 100% 50%;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    100% &#123;</span><br><span class="line">        background-position: 0 50%;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@-moz-keyframes Gradient &#123;</span><br><span class="line">    0% &#123;</span><br><span class="line">        background-position: 0 50%;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    50% &#123;</span><br><span class="line">        background-position: 100% 50%;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    100% &#123;</span><br><span class="line">        background-position: 0 50%;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@keyframes Gradient &#123;</span><br><span class="line">    0% &#123;</span><br><span class="line">        background-position: 0 50%;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    50% &#123;</span><br><span class="line">        background-position: 100% 50%;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    100% &#123;</span><br><span class="line">        background-position: 0 50%;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#</span><span class="bash">footer &#123;</span></span><br><span class="line">    background: linear-gradient(-45deg, #ee7752, #ce3e75, #23a6d5, #23d5ab);</span><br><span class="line">    background-size: 400% 400%;</span><br><span class="line">    -webkit-animation: Gradient 10s ease infinite;</span><br><span class="line">    -moz-animation: Gradient 10s ease infinite;</span><br><span class="line">    animation: Gradient 10s ease infinite;</span><br><span class="line">    -o-user-select: none;</span><br><span class="line">    -ms-user-select: none;</span><br><span class="line">    -webkit-user-select: none;</span><br><span class="line">    -moz-user-select: none;</span><br><span class="line">    user-select: none;</span><br><span class="line">    border-top-left-radius: 10px;</span><br><span class="line">    border-top-right-radius: 10px;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#</span><span class="bash">footer:before &#123;</span></span><br><span class="line">    background-color: rgba(0, 0, 0, 0);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>半透明</p>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">footer &#123;</span></span><br><span class="line">    background: rgba(255,255,255,.15);</span><br><span class="line">    color: #000;</span><br><span class="line">    border-top-right-radius: 20px;</span><br><span class="line">    border-top-left-radius: 20px;</span><br><span class="line">    backdrop-filter: saturate(100%) blur(5px)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">footer::before &#123;</span></span><br><span class="line">    background: rgba(255,255,255,.15)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">footer <span class="comment">#footer-wrap &#123;</span></span></span><br><span class="line">    color: var(--font-color);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">footer <span class="comment">#footer-wrap a &#123;</span></span></span><br><span class="line">    color: var(--font-color);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>然后引入即可</p></blockquote></li></ul><p><img src= "/img/loading2.gif" data-lazy-src="https://gitee.com/MingHuifan/image/raw/master/20210221122344.png" alt="image-20210221122343300"></p><h3 id="手机侧边栏默认不展开"><a href="#手机侧边栏默认不展开" class="headerlink" title="手机侧边栏默认不展开"></a>手机侧边栏默认不展开</h3><blockquote><p>新建 js 文件即可，然后引入</p></blockquote><p><img src= "/img/loading2.gif" data-lazy-src="https://gitee.com/MingHuifan/image/raw/master/20210221124518.png" alt="image-20210221124517652"></p><p><img src= "/img/loading2.gif" data-lazy-src="https://gitee.com/MingHuifan/image/raw/master/20210221124539.png" alt="image-20210221124538405"></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">var mobile_sidebar_menus = document.getElementById(&quot;mobile-sidebar-menus&quot;);</span><br><span class="line">var menus_item_child = mobile_sidebar_menus.getElementsByClassName(</span><br><span class="line">    &quot;menus_item_child&quot;</span><br><span class="line">);</span><br><span class="line">var menus_expand = mobile_sidebar_menus.getElementsByClassName(&quot;menus-expand&quot;);</span><br><span class="line">for (var i = 0; i &lt; menus_item_child.length; i++) &#123;</span><br><span class="line">    menus_item_child[i].style.display = &quot;none&quot;;</span><br><span class="line">    menus_expand[i].className += &quot; menus-closed&quot;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="加入clustrmaps访问者地图"><a href="#加入clustrmaps访问者地图" class="headerlink" title="加入clustrmaps访问者地图"></a>加入clustrmaps访问者地图</h3><p><img src= "/img/loading2.gif" data-lazy-src="https://gitee.com/MingHuifan/image/raw/master/20210221175024.png" alt="image-20210221175020256"></p><blockquote><p><a href="https://clustrmaps.com/">clustrmaps.com</a></p><p>注册账号或直接登录</p></blockquote><p><img src= "/img/loading2.gif" data-lazy-src="https://gitee.com/MingHuifan/image/raw/master/20210221175157.png" alt="image-20210221175156007"></p><blockquote><p>填写你的网址然后会看到代码，一种是JS一种是HTML的，这里我选用HTML的</p></blockquote><p>先在主题配置文件加入</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">card_maps: true</span><br></pre></td></tr></table></figure><p><img src= "/img/loading2.gif" data-lazy-src="https://gitee.com/MingHuifan/image/raw/master/20210221181520.png" alt="image-20210221181519652"></p><p>然后在 </p><p>themes\hexo-theme-butterfly\layout\includes\widget</p><p>路径下创建一个文件 如 <strong>card_maps.pug</strong> </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">.card-widget.card-map</span><br><span class="line">    .card-content</span><br><span class="line">        .item-headline</span><br><span class="line">            i.fa.fa-map-marker(aria-hidden=&quot;true&quot;)</span><br><span class="line">            span= _p(&#x27;足迹&#x27;)</span><br><span class="line">    # 这里是你复制过来的代码</span><br><span class="line">    &lt;a href=&#x27;https://clustrmaps.com/site/1bgca&#x27;  title=&#x27;Visit tracker&#x27;&gt;&lt;img src=&#x27;//clustrmaps.com/map_v2.png?cl=ffffff&amp;w=300&amp;t=tt&amp;d=Ti7plTQaKk8zjpyoUXfK29uCDrIzNldAuvoLvSLy1bU&amp;ct=ffffff&amp;co=2d78ad&#x27;/&gt;&lt;/a&gt;</span><br></pre></td></tr></table></figure><p>如图</p><p><img src= "/img/loading2.gif" data-lazy-src="https://gitee.com/MingHuifan/image/raw/master/20210221181857.png" alt="image-20210221181856529"></p><p>然后在 widget/ 目录下找得到 index.png 加上下面代码</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">if theme.aside.card_maps</span><br><span class="line">    !=partial(&#x27;includes/widget/card_maps&#x27;, &#123;&#125;, &#123;cache:theme.fragment_cache&#125;)</span><br></pre></td></tr></table></figure><p>如图</p><p><img src= "/img/loading2.gif" data-lazy-src="https://gitee.com/MingHuifan/image/raw/master/20210221182140.png" alt="image-20210221182139515"></p><h3 id="添加评论"><a href="#添加评论" class="headerlink" title="添加评论"></a>添加评论</h3><ol><li><p>首先去 leadcloud 国际版注册一个账号<a href="https://leancloud.app/">Leadcloud国际版</a> 。</p></li><li><p>然后创建应用</p><p> <img src= "/img/loading2.gif" data-lazy-src="https://gitee.com/MingHuifan/image/raw/master/20210222103608.png" alt="image-20210222103607671"></p><p> <img src= "/img/loading2.gif" data-lazy-src="https://gitee.com/MingHuifan/image/raw/master/20210222103806.png" alt="image-20210222103804648"></p></li><li><p>创建class</p><p> <img src= "/img/loading2.gif" data-lazy-src="https://gitee.com/MingHuifan/image/raw/master/20210222104008.png" alt="image-20210222104007668"></p><p> <img src= "/img/loading2.gif" data-lazy-src="https://gitee.com/MingHuifan/image/raw/master/20210222104130.png" alt="image-20210222104129170"></p></li><li><p>找到用户栏添加用户</p><p> <img src= "/img/loading2.gif" data-lazy-src="https://gitee.com/MingHuifan/image/raw/master/20210222104218.png" alt="image-20210222104217236"></p><p> <img src= "/img/loading2.gif" data-lazy-src="https://gitee.com/MingHuifan/image/raw/master/20210222104320.png" alt="image-20210222104319685"></p></li><li><p>然后修改访问权限</p><p> <img src= "/img/loading2.gif" data-lazy-src="https://gitee.com/MingHuifan/image/raw/master/20210222104638.png" alt="image-20210222104636441"></p><p> <img src= "/img/loading2.gif" data-lazy-src="https://gitee.com/MingHuifan/image/raw/master/20210222104744.png" alt="image-20210222104743842"></p><p> <img src= "/img/loading2.gif" data-lazy-src="https://gitee.com/MingHuifan/image/raw/master/20210222104849.png" alt="image-20210222104848202"></p><blockquote><p>把 _User 的权限全部设置为指定用户但不添加，就是为了没有用户可以修改，防止别人通过 id 和 key 篡改我们用户数据</p><p>即上一步添加用户就是这么个作用</p><p>Leancloud的配置就告一段落了</p></blockquote></li><li><p>然后在主题配置文件中填写 Leancloud 信息</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> valine</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> https://valine.js.org</span></span><br><span class="line">valine:</span><br><span class="line">  appId:  # leancloud application app id</span><br><span class="line">  appKey:  # leancloud application app key</span><br><span class="line">  pageSize: 10 # comment list page size</span><br><span class="line">  avatar: monsterid # gravatar style https://valine.js.org/#/avatar</span><br><span class="line">  lang: zh-CN # i18n: zh-CN/zh-TW/en/ja</span><br><span class="line">  placeholder: Please leave your footprints # valine comment input placeholder (like: Please leave your footprints)</span><br><span class="line">  guest_info: nick,mail # valine comment header info (nick/mail/link)</span><br><span class="line">  recordIP: false # Record reviewer IP</span><br><span class="line">  serverURLs: # This configuration is suitable for domestic custom domain name users, overseas version will be automatically detected (no need to manually fill in)</span><br><span class="line">  bg: # valine background</span><br><span class="line">  emojiCDN: # emoji CDN</span><br><span class="line">  enableQQ: true # enable the Nickname box to automatically get QQ Nickname and QQ Avatar</span><br><span class="line">  requiredFields: nick,mail # required fields (nick/mail)</span><br><span class="line">  visitor: false</span><br><span class="line">  option:</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>最后不要忘记打开这个</p><p> <img src= "/img/loading2.gif" data-lazy-src="https://gitee.com/MingHuifan/image/raw/master/20210222165836.png" alt="image-20210222165835011"></p></li></ol><h3 id="文章加密"><a href="#文章加密" class="headerlink" title="文章加密"></a>文章加密</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-blog-encrypt</span><br></pre></td></tr></table></figure><p>然后在文章的头部写上，如下例子</p><p><img src= "/img/loading2.gif" data-lazy-src="https://gitee.com/MingHuifan/image/raw/master/20210222165511.png" alt="image-20210222165510117"></p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 记录 </tag>
            
            <tag> 博客 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>初识汇编</title>
      <link href="2021/02/18/%E5%88%9D%E8%AF%86%E6%B1%87%E7%BC%96/"/>
      <url>2021/02/18/%E5%88%9D%E8%AF%86%E6%B1%87%E7%BC%96/</url>
      
        <content type="html"><![CDATA[<h1 id="初识汇编"><a href="#初识汇编" class="headerlink" title="初识汇编"></a>初识汇编</h1><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>语言</p><p>进制</p><p>进制如何运算</p><p>二进制（量子计算）</p><p>数据宽度</p><p>有符号数和无符号数</p><p>原码反码补码</p><p>位运算</p><p>位运算计算</p><p>汇编（OD）</p><p>寄存器</p><p>内存</p><p>汇编指令</p><p>内存复制</p><p>堆栈指令</p><p>汇编如何写函数</p><p>堆栈传参</p><p>堆栈平衡</p><p>外挂</p><h2 id="语言"><a href="#语言" class="headerlink" title="语言"></a>语言</h2><p>什么是机器语言？</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 目前主流的电子计算机</span></span><br><span class="line">状态：0 1</span><br><span class="line">加0100 0000</span><br><span class="line">减0100 1000</span><br><span class="line">乘0100 1000 0100 1000</span><br><span class="line">除0100 1000 1100 1000</span><br></pre></td></tr></table></figure><p>上述为机器语言，通过助记符 -&gt; 得到汇编语言，如下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">加INC-编译器-&gt; 0100 0000</span><br><span class="line">减DEC 0100 1000</span><br><span class="line">乘MUL 0100 1000 0100 1000</span><br><span class="line">除DIV 0100 1000 1100 1000</span><br></pre></td></tr></table></figure><p>汇编只是用于助记机器语言</p><h2 id="进制"><a href="#进制" class="headerlink" title="进制"></a>进制</h2><blockquote><p>测试</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 一进制 1 - 20</span></span><br><span class="line">1</span><br><span class="line">1 1</span><br><span class="line">1 1 1</span><br><span class="line">1 1 1 1</span><br><span class="line">.........</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 三进制</span></span><br><span class="line">012</span><br><span class="line">101112</span><br><span class="line">202122</span><br><span class="line">100101102</span><br><span class="line">110111112</span><br><span class="line">120121122</span><br><span class="line">200201202</span><br><span class="line">210211212</span><br><span class="line">220221222</span><br><span class="line">100010011002</span><br><span class="line">101010111012</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 七进制</span></span><br><span class="line">0123456</span><br><span class="line">10111213141516</span><br><span class="line">20212223242526</span><br><span class="line">3031...</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>加密解密：进制的加密</p><p>数字量一大，总有规律</p><blockquote><p>进制的运算</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 八进制计算</span></span><br><span class="line">2 + 3 = 5</span><br><span class="line">2 * 3 = 6</span><br><span class="line">4 + 5 = 11</span><br><span class="line">4 * 5 = 24</span><br><span class="line"></span><br><span class="line">277 + 333 = 632</span><br><span class="line">276 * 54 = 20250</span><br><span class="line">273 - 54 = 217</span><br><span class="line">234 / 4 = 47</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>结论：无论什么进制，本事都有一套完美的运算体系，都可以通过列表的方式计算出来</p><blockquote><p>二进制</p></blockquote><p>计算机使用二进制 0 1 转态！ 电子！ </p><p>物理极限：摩尔定理！追求语言的极限！并发语言！软操作！</p><p><strong>量子计算机</strong>：一旦民用，目前的安全系统不再有用，爆破几分钟的事</p><p>可以实现量子计算的机器</p><p>传统计算机：集成电路：0 1     硅晶片</p><p>量子计算机的单位：昆比特</p><p>光子：正交偏振方向</p><p>磁场：电子的自旋方向</p><p>21世纪    计算力    快到尽头了</p><p>量子计算机    -&gt;    提高计算机的计算力</p><p>量子比特，量子叠加态，量子纠缠，量子并行原理</p><p>为什么要学习理解二进制？</p><p>寄存器、内存、位！底层的每一个位都是有含义的。</p><p>汇编高级：了解程序深层！操作系统的内核</p><h2 id="数据宽度"><a href="#数据宽度" class="headerlink" title="数据宽度"></a>数据宽度</h2><p> C C++ Java 都需要定义数据的类型。计算机底层需要我们给这些数据定义宽度</p><p>位    0 1<br>字节    0 - 0XFF<br>字    0 - 0XFFFF<br>双字    0 - 0XFFFFFFFF</p><h2 id="有符号数和无符号数"><a href="#有符号数和无符号数" class="headerlink" title="有符号数和无符号数"></a>有符号数和无符号数</h2><p>数据都是有宽度的，每个数据代表什么意思？</p><p>规则</p><p><strong>二进制解码增加一个规则</strong></p><ul><li><p>无符号数规则</p>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1001 1010十六进制：0x9A十进制：154</span><br></pre></td></tr></table></figure></li><li><p>有符号数规则</p><p>  最高位是符号位：1（负数）0（正数）</p></li></ul><h2 id="原码反码补码"><a href="#原码反码补码" class="headerlink" title="原码反码补码"></a>原码反码补码</h2><p><strong>编码规则</strong> ：有符号位的编码规则</p><ul><li>原码：最高位是符号位</li><li>反码：<ul><li>正数：反码和原码相同</li><li>负数：符号位一定是1，其余对原码取反</li></ul></li><li>补码：<ul><li>正数：补码和原码相同</li><li>负数：符号位一定是1，反码 +1</li></ul></li></ul><blockquote><p>例子</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 如果是正数，都是一样的</span></span><br><span class="line">1</span><br><span class="line"><span class="meta">#</span><span class="bash"> 原码0000 0001</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 反码0000 0001</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 补码0000 0001</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 如果是负数</span></span><br><span class="line">-1</span><br><span class="line"><span class="meta">#</span><span class="bash"> 原码1000 0001</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 反码1111 1110</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 补码1111 1111</span></span><br><span class="line">-7</span><br><span class="line"><span class="meta">#</span><span class="bash"> 原码1000 0111</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 反码1111 1000</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 补码1111 1001</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>一个二进制数，需要了解它是有符号数还是无符号数</p><p>如一个 32 位机器</p><p>FFFF FFFF</p><ul><li>有符号表示 -1</li><li>无符号表示 4,294,967,295</li></ul><h2 id="位运算"><a href="#位运算" class="headerlink" title="位运算"></a>位运算</h2><p>2 * 8 最高效的计算方式   -&gt;  2&lt;&lt;3</p><p>很多调试器，需要通过位来判断 CPU 状态</p><ol><li><p>与运算（and &amp;）串行</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1011 0001</span><br><span class="line">1101 1000</span><br><span class="line">1001 0000</span><br></pre></td></tr></table></figure></li><li><p>或运算（or |）并行</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1011 0001</span><br><span class="line">1101 1000</span><br><span class="line">1111 1001</span><br></pre></td></tr></table></figure></li><li><p>异或运算（xor ^）不同为1</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1011 0001</span><br><span class="line">1101 1000</span><br><span class="line">0110 1001</span><br></pre></td></tr></table></figure></li><li><p>非运算（单目运算符 not ~）</p><p> 0 就是 1，1 就是 0</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1101 1000</span><br><span class="line">0010 0111</span><br></pre></td></tr></table></figure></li><li><p>位运算（移动位，左移 * 2，右移 / 2）</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">0000 00011</span><br><span class="line">0000 00102</span><br><span class="line">0000 01004</span><br><span class="line">0000 10008</span><br></pre></td></tr></table></figure><p> 左移：shl    &lt;&lt;</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0000 0001 # 所以二进制位全部左移若干位，高位丢弃，低位补0</span><br></pre></td></tr></table></figure><p> 右移：shr    &gt;&gt;</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0000 0001 # 所以二进制位全部左移若干位，低位丢弃，高位补补0或1（正数补0，负数补1）</span><br></pre></td></tr></table></figure></li></ol><h2 id="位运算的加减乘除"><a href="#位运算的加减乘除" class="headerlink" title="位运算的加减乘除"></a>位运算的加减乘除</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 计算机怎么操作 4 + 5？</span></span><br><span class="line">0000 0100</span><br><span class="line">0000 0101</span><br><span class="line">----------计算机不会直接加</span><br><span class="line">0000 1001</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 下面是计算机怎么计算的</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 第一步， 异或：如果没有进位，异或直接就可以出结果</span></span><br><span class="line">0000 0100</span><br><span class="line">0000 0101</span><br><span class="line">---------</span><br><span class="line">0000 0001</span><br><span class="line"><span class="meta">#</span><span class="bash"> 第二步：与运算（判断进位，如果与运算结果为0，则没有进位）</span></span><br><span class="line">0000 0100</span><br><span class="line">0000 0101</span><br><span class="line">---------</span><br><span class="line">0000 0100</span><br><span class="line"><span class="meta">#</span><span class="bash"> 第三步，将与运算的结果，左移一位</span></span><br><span class="line">0000 1000</span><br><span class="line"><span class="meta">#</span><span class="bash"> 第四步：异或</span></span><br><span class="line">0000 0001</span><br><span class="line">0000 1000</span><br><span class="line">---------</span><br><span class="line">0000 1001</span><br><span class="line"><span class="meta">#</span><span class="bash"> 第五步：与运算（判断进位，如果与运算结果为0，没有进位）</span></span><br><span class="line">0000 0001</span><br><span class="line">0000 1000</span><br><span class="line">---------</span><br><span class="line">0000 0000</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 所以最终结果就是与运算为0的上一个异或运算的值</span></span><br></pre></td></tr></table></figure><h2 id="寄存器"><a href="#寄存器" class="headerlink" title="寄存器"></a>寄存器</h2><p>寄存器：</p><p>存储数据：CPU -&gt; 内存 -&gt; 硬盘</p><p>32位 CPU：8    16    32</p><p>64位 CPU：8    16    32    64</p><p><strong>通用寄存器</strong></p><p>32位的通用寄存器只有 8 个</p><p><img src= "/img/loading2.gif" data-lazy-src="https://gitee.com/MingHuifan/image/raw/master/20210209165542.png" alt="image-20210209165541692"></p><p>存值的范围    0 - FFFFFFFF</p><p>对于二进制来说，直接修改值</p><p><strong>计算机如果像寄存器存值</strong></p><p><strong>mov 指令</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mov 存的地址,存的数</span><br><span class="line">mov 存的地址1,存的地址1</span><br></pre></td></tr></table></figure><p>可以将数字写入寄存器，可以将寄存器中的值写到寄存器</p><p><strong>不同的寄存器</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">32位16位8位</span><br><span class="line">EAX AX AL</span><br><span class="line">ECX CX CL</span><br><span class="line">EDX DX DL</span><br><span class="line">EBX BX BL</span><br><span class="line">ESP SP AH</span><br><span class="line">EBP BP CH</span><br><span class="line">ESI SI DH</span><br><span class="line">EDI DI BH</span><br></pre></td></tr></table></figure><p>8位：L低8位，H高8位</p><p>除了这些通用寄存器之外，那么其他的寄存器都有自己特定的功能！</p><h2 id="内存"><a href="#内存" class="headerlink" title="内存"></a>内存</h2><p>寄存器很小，不够用，所以把数据放到内存中</p><p>每个应用程序都有4GB的内存空间，空头支票</p><p>程序真正运行的时候，才会用到物理内存</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1B = 8bit</span><br><span class="line">1kb = 1024B</span><br><span class="line">1MB = 1024KB</span><br><span class="line">1GB = 1024MB</span><br><span class="line">4GB = 4096M = 4096 * 1024 * 1024B = 2^(12+10+10) = 2^32</span><br></pre></td></tr></table></figure><p><strong>内存地址</strong></p><p>存一个数：占用的大小，数据宽度！存到哪里？</p><p>计算机中内存地址很多，空间很大，每个空间分配一个地址，名字</p><p>如32位系统：0x00000000 - 0xFFFFFFFF</p><p>32位：寻址能力！4GB</p><p>FFFFFFFF + 1 = 100000000，最大的值</p><p>位是怎么限制内存大小的</p><p>100000000 内存地址 * 8 = 位：800000000</p><p>转换为10进制 /8 ：4,294,967,296字节</p><p>按照规则 /1024 ，最终即为 4GB</p><p><strong>内存如何存值</strong></p><p>数据宽度：    byte    word    dwrod</p><p>不是任意的地址都可以写东西，申请使用的。只有程序申请过的内存才可以使用</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 汇编如何向内存中写值</span></span><br><span class="line">mov 数据宽度 内存地址,值</span><br><span class="line">mov byte/word/dword/qword,-1</span><br><span class="line"></span><br><span class="line">eg:mov byte ptr ds:[0xFFFFFFFF],1</span><br><span class="line"><span class="meta">#</span><span class="bash"> 传递的值的大小一定要和数据宽度相等</span></span><br></pre></td></tr></table></figure><p><strong>内存有多种写法</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">ds:[0x0090FFFF+4]内存地址偏移</span><br><span class="line">ds:[eax]寄存器</span><br><span class="line">ds:[eax+4]寄存器偏移</span><br><span class="line"><span class="meta">#</span><span class="bash"> 数组[]</span></span><br><span class="line">ds:[reg+reg*&#123;1,2,4,8&#125;]数组</span><br><span class="line">ds:[reg+reg*&#123;1,2,4,8&#125;+4]数组偏移</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C </category>
          
          <category> C++ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 汇编 </tag>
            
            <tag> 底层 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>判断一个链表是否为回文结构</title>
      <link href="2021/02/18/%E5%88%A4%E6%96%AD%E4%B8%80%E4%B8%AA%E9%93%BE%E8%A1%A8%E6%98%AF%E5%90%A6%E4%B8%BA%E5%9B%9E%E6%96%87%E7%BB%93%E6%9E%84/"/>
      <url>2021/02/18/%E5%88%A4%E6%96%AD%E4%B8%80%E4%B8%AA%E9%93%BE%E8%A1%A8%E6%98%AF%E5%90%A6%E4%B8%BA%E5%9B%9E%E6%96%87%E7%BB%93%E6%9E%84/</url>
      
        <content type="html"><![CDATA[<h1 id="链表"><a href="#链表" class="headerlink" title="链表"></a>链表</h1><blockquote><p>面试时链表解题方法论</p><ol><li>对于笔试：不用太在乎空间复杂度，一切为了时间复杂度</li><li>对于面试：时间复杂度依然放在第一位，但是一定要找到空间最省的方法</li></ol><p>重要技巧</p><ul><li>额外数据结构记录（哈希表、队列、栈等）</li><li>快慢指针</li></ul></blockquote><h3 id="判断一个链表是否为回文结构"><a href="#判断一个链表是否为回文结构" class="headerlink" title="判断一个链表是否为回文结构"></a>判断一个链表是否为回文结构</h3><p>题目：给定一个单链表头结点 head，请判断该链表是否为回文结构</p><p>例子：1-&gt;2-&gt;1，返回true；1-&gt;2-&gt;2-&gt;1，返回true；1-&gt;2-&gt;3，返回false。</p><p>要求：如果链表长度为N，时间复杂度达到 O(N)，额外空间复杂度达到 O(1)</p><h3 id="分析：想到三种方法"><a href="#分析：想到三种方法" class="headerlink" title="分析：想到三种方法"></a><strong>分析：想到三种方法</strong></h3><ul><li><p>压入栈中，然后遍历同时弹栈，看节点内容是否想等</p><p>  <img src= "/img/loading2.gif" data-lazy-src="https://gitee.com/MingHuifan/image/raw/master/20210217172005.png" alt="image-20210217172004608"></p></li><li><p>和第一种一样不过只让链表后半部分压栈，然后遍历比对</p><p>  <img src= "/img/loading2.gif" data-lazy-src="https://gitee.com/MingHuifan/image/raw/master/20210217171849.png" alt="image-20210217171843199"></p></li><li><p>第三种：<br>  step1：先用快慢指针（slow、fast）找到中点（偶数为对称轴前一个，奇数即为中点）</p><p>  step2：然后将后面的链表反转：</p><p>  ​            1）偶数时：1 -&gt; 2 -&gt; 3 &lt;- 4 &lt;- 5 &lt;- 6<br>  ​            2）奇数时：1 -&gt; 2 -&gt; 3 -&gt; 4 &lt;- 5 &lt;- 6 &lt;- 7<br>  step3：然后分别遍历左右链表比对即可得出结果<br>  step4：别忘了将链表复原</p><p>  <img src= "/img/loading2.gif" data-lazy-src="https://gitee.com/MingHuifan/image/raw/master/20210217193140.png" alt="image-20210217191654589"></p></li></ul><h4 id="法一：链表全部压栈"><a href="#法一：链表全部压栈" class="headerlink" title="法一：链表全部压栈"></a>法一：链表全部压栈</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 把整个链表压栈，然后遍历链表和弹栈结果是否一致</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">isPalindrome1</span><span class="params">(ListNode head)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (head == <span class="keyword">null</span> || head.next == <span class="keyword">null</span>) <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    Stack&lt;ListNode&gt; stack = <span class="keyword">new</span> Stack&lt;&gt;();</span><br><span class="line">    ListNode tmp = head;</span><br><span class="line">    <span class="keyword">while</span> (tmp != <span class="keyword">null</span>) &#123;</span><br><span class="line">        stack.push(tmp);</span><br><span class="line">        tmp = tmp.next;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (head != <span class="keyword">null</span> &amp;&amp; stack.pop().val == head.val) &#123;</span><br><span class="line">        head = head.next;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> head == <span class="keyword">null</span> ? <span class="keyword">true</span> : <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="法二：一半压栈"><a href="#法二：一半压栈" class="headerlink" title="法二：一半压栈"></a>法二：一半压栈</h4><p>如何找到中点：快慢指针 /slow/fast，条件如何取。有三种常见初始状态（但至少要两个节点）</p><ol><li><strong>slow = fast = head</strong>：都指向头结点</li><li><strong>slow = head; fast = head.next;</strong> ：慢指向头结点，快指向第二节点</li><li><strong>slow = head.next; fast = head;</strong> ：慢指向第二节点，快指向头结点</li></ol><blockquote><p>然后依次讨论判断的条件是 ==<strong>fast.next!= null &amp;&amp; fast.next.next != null</strong>==</p></blockquote><ul><li>```shell<br>  slow = fast = head; 时  EX1: 1 2    开始都指向第 1<br>  明显 fast 一步都不能动<br>  指向对称轴前一个  EX2: 1 2 3 4<br>  由判断条件得出fast可以走1步，那么slow指向2<br>  指向对称轴前一个  EX3: 1 2 3 4 5 6<br>  fast可走2步，slow指向3<br>  对称轴前一个  EX4: 1 2 3<br>  fast可以走1步，slow指向2<br>  指向中点位置  EX5: 1 2 3 4 5<br>  fast可以走2步，slow指向3<br>  指向中点位置  EX6: 1 2 3 4 5 6 7<br>  fast可走3步，slow指向4<br>  指向中点位置  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">- &#96;&#96;&#96;shell</span><br><span class="line">slow &#x3D; head; fast &#x3D; head.next; 时</span><br><span class="line"></span><br><span class="line">EX1:链表：1 2slow指向1，fast指向2</span><br><span class="line">明显 fast 一步都不能动</span><br><span class="line">然后此时指向对称轴前一个</span><br><span class="line"></span><br><span class="line">EX2:链表：1 2 3 4</span><br><span class="line">由判断条件得出fast可以走1步，那么slow指向2</span><br><span class="line">也是指向对称轴前一个</span><br><span class="line"></span><br><span class="line">EX3: 1 2 3 4 5 6</span><br><span class="line">fast可走2步，slow指向3</span><br><span class="line">对称轴前一个</span><br><span class="line"></span><br><span class="line">EX4:链表：1 2 3</span><br><span class="line">fast可以走0步，slow指向1</span><br><span class="line">指向中点前一个位置</span><br><span class="line"> </span><br><span class="line">EX5:链表：1 2 3 4 5</span><br><span class="line">fast可以走1步，slow指向2</span><br><span class="line">指向中点前一个位置</span><br><span class="line"></span><br><span class="line">EX6: 1 2 3 4 5 6 7</span><br><span class="line">fast可走2步，slow指向3</span><br><span class="line">指向中点位置前一个位置</span><br></pre></td></tr></table></figure></li><li><pre><code class="shell">  slow = head.next; fast = head; 时     EX1:链表：1 2    slow指向2，fast指向1  明显 fast 一步都不能动  然后此时指向对称轴后一个    EX2:链表：1 2 3 4      由判断条件得出fast可以走1步，那么slow指向3  也是指向对称轴后一个    EX3: 1 2 3 4 5 6  fast可走2步，slow指向3  对称轴后一个    EX4:链表：1 2 3  fast可以走1步，slow指向3  指向中点后一个位置     EX5:链表：1 2 3 4 5  fast可以走2步，slow指向4  指向中点后一个位置    EX6: 1 2 3 4 5 6 7  fast可走3步，slow指向5  指向中点后一个位置  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&gt;最后得出结论：判断条件是 &#x3D;&#x3D;**fast.next!&#x3D; null &amp;&amp; fast.next.next !&#x3D; null**&#x3D;&#x3D;</span><br><span class="line">&gt;</span><br><span class="line">&gt;1. slow &#x3D; fast &#x3D; head;</span><br><span class="line">&gt;</span><br><span class="line">&gt;偶数：对称轴前一个</span><br><span class="line">&gt;</span><br><span class="line">&gt;奇数：中点</span><br><span class="line">&gt;</span><br><span class="line">&gt;2. slow &#x3D; head; fast &#x3D; head.next;</span><br><span class="line">&gt;</span><br><span class="line">&gt;偶数：对称轴前一个</span><br><span class="line">&gt;</span><br><span class="line">&gt;奇数：中点前一个</span><br><span class="line">&gt;</span><br><span class="line">&gt;3. slow &#x3D; head.next; fast &#x3D; head; </span><br><span class="line">&gt;</span><br><span class="line">&gt;偶数：对称轴后一个</span><br><span class="line">&gt;</span><br><span class="line">&gt;奇数：中点后一个</span><br><span class="line"></span><br><span class="line">&#96;&#96;&#96;java</span><br><span class="line">&#x2F;&#x2F; 很容易得出，我们需要后一半压栈所以选择第三种快慢指针方案</span><br><span class="line">    public static boolean isPalindrome2(ListNode head) &#123;</span><br><span class="line">        if (head &#x3D;&#x3D; null || head.next &#x3D;&#x3D; null) return true;</span><br><span class="line">        ListNode slow &#x3D; head.next;</span><br><span class="line">        ListNode fast &#x3D; head;</span><br><span class="line">        while (fast.next !&#x3D; null &amp;&amp; fast.next.next !&#x3D; null) &#123;</span><br><span class="line">            fast &#x3D; fast.next.next;</span><br><span class="line">            slow &#x3D; slow.next;</span><br><span class="line">        &#125;</span><br><span class="line">        &#x2F;&#x2F; 此时slow指向中点或者对称轴的下一个</span><br><span class="line">        Stack&lt;ListNode&gt; stack &#x3D; new Stack&lt;&gt;();</span><br><span class="line">        while (slow !&#x3D; null) &#123;</span><br><span class="line">            stack.push(slow);</span><br><span class="line">            System.out.print(slow.val + &quot;_&quot;);</span><br><span class="line">            slow &#x3D; slow.next;</span><br><span class="line">        &#125;</span><br><span class="line">        while (!stack.isEmpty()) &#123;</span><br><span class="line">            if (head.val !&#x3D; stack.pop().val) &#123;</span><br><span class="line">                return false;</span><br><span class="line">            &#125;</span><br><span class="line">            head &#x3D; head.next;</span><br><span class="line">        &#125;</span><br><span class="line">        return true;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></code></pre></li></ul><h4 id="法三："><a href="#法三：" class="headerlink" title="法三："></a>法三：</h4><p>这里需要用到反转链表的模板，模板如下</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 加入 head 为链表的头结点</span></span><br><span class="line">ListNode pre = head;<span class="comment">// 即指向头结点</span></span><br><span class="line">ListNode last = head.next;<span class="comment">// 即指向头结点下一个</span></span><br><span class="line">ListNode tmp = <span class="keyword">null</span>;</span><br><span class="line">pre.next = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">while</span> (last != <span class="keyword">null</span>) &#123;</span><br><span class="line">        tmp = last.next;</span><br><span class="line">        last.next = pre;</span><br><span class="line">        pre = last;</span><br><span class="line">        last = tmp;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">// 最后循环完后的结果是 pre 指向反转的首节点，last、tmp 指向 null</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">    <span class="comment">// 用偶数个举例，如链表为 1 -&gt; 2 -&gt; 3 -&gt; 4 -&gt; 5 -&gt; 6</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">isPalindrome3</span><span class="params">(ListNode head)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (head == <span class="keyword">null</span> || head.next == <span class="keyword">null</span>) <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// step1：找到中点位置，偶数为对称轴前一个，奇数为中点</span></span><br><span class="line">        ListNode slow = head;</span><br><span class="line">        ListNode fast = head;</span><br><span class="line">        <span class="keyword">while</span> (fast.next != <span class="keyword">null</span> &amp;&amp; fast.next.next != <span class="keyword">null</span>) &#123;</span><br><span class="line">            fast = fast.next.next;</span><br><span class="line">            slow = slow.next;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// step2：反转后半部分链表</span></span><br><span class="line">        <span class="comment">// 此时 slow 指向中点或者对称轴的前一个，也就是相当于反转部分的头结点</span></span><br><span class="line">        <span class="comment">// 即 slow 指向 3，接下来要反转后面部分得到：1 -&gt; 2 -&gt; 3 &lt;- 4 &lt;- 5 &lt;- 6</span></span><br><span class="line">        fast = slow.next;</span><br><span class="line">        ListNode tmp = <span class="keyword">null</span>;</span><br><span class="line">        slow.next = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">while</span> (fast != <span class="keyword">null</span>) &#123;</span><br><span class="line">            tmp = fast.next;</span><br><span class="line">            fast.next = slow;</span><br><span class="line">            slow = fast;</span><br><span class="line">            fast = tmp;</span><br><span class="line">        &#125;</span><br><span class="line">        tmp = slow; <span class="comment">// 指向最后一个节点（或者后部分链表的头结点）这里后面会用到</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// step3：将两边链表分别遍历比对</span></span><br><span class="line">        <span class="comment">// 此时slow指向反转链表的首节点，也就是原链表的最后一个</span></span><br><span class="line">        <span class="comment">// 1 -&gt; 2 -&gt; 3 &lt;- 4 &lt;- 5 &lt;- 6 slow 指向 6</span></span><br><span class="line">        <span class="comment">// 然后我们依次遍历两边的链表</span></span><br><span class="line">        fast = head;</span><br><span class="line">        <span class="keyword">boolean</span> ans = <span class="keyword">true</span>;</span><br><span class="line">        <span class="keyword">while</span> (fast != <span class="keyword">null</span> &amp;&amp; slow != <span class="keyword">null</span>) &#123;</span><br><span class="line"><span class="comment">//            System.out.print(&quot;fast:&quot; + fast.val + &quot;,slow:&quot; + slow.val + &quot;\n&quot;);</span></span><br><span class="line">            <span class="keyword">if</span> (fast.val != slow.val) &#123;</span><br><span class="line">                ans = <span class="keyword">false</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            fast = fast.next;</span><br><span class="line">            slow = slow.next;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// step4：链表复原</span></span><br><span class="line">        <span class="comment">// 此时 slow 指向 3，fast 指向 null</span></span><br><span class="line">        <span class="comment">// 如果是奇数个 slow、fast 都指向 null，所以要重新赋值</span></span><br><span class="line">        slow = tmp;</span><br><span class="line">        fast = slow.next;</span><br><span class="line">        <span class="keyword">while</span> (fast != <span class="keyword">null</span>) &#123;</span><br><span class="line">            tmp = fast.next;</span><br><span class="line">            fast.next = slow;</span><br><span class="line">            slow = fast;</span><br><span class="line">            fast = tmp;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><blockquote><p>全部 code</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> LinkedList;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Stack;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @ Date: 2021/2/10 - 13:19</span></span><br><span class="line"><span class="comment"> * @ Description: LinkedList</span></span><br><span class="line"><span class="comment"> * @ Version: 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">// https://leetcode-cn.com/problems/palindrome-linked-list-lcci/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">isPalindromeLinkedList_</span>回文链表 </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">ListNode</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> val;</span><br><span class="line">        ListNode next;</span><br><span class="line">        ListNode(<span class="keyword">int</span> x) &#123;</span><br><span class="line">            val = x;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">printLinkedList</span><span class="params">(ListNode head)</span> </span>&#123;</span><br><span class="line">        System.out.print(<span class="string">&quot;Linked List: &quot;</span>);</span><br><span class="line">        <span class="keyword">while</span> (head != <span class="keyword">null</span>) &#123;</span><br><span class="line">            System.out.print(head.val + <span class="string">&quot; &quot;</span>);</span><br><span class="line">            head = head.next;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 把整个链表压栈，然后遍历链表和弹栈结果是否一致</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">isPalindrome1</span><span class="params">(ListNode head)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (head == <span class="keyword">null</span> || head.next == <span class="keyword">null</span>) <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        Stack&lt;ListNode&gt; stack = <span class="keyword">new</span> Stack&lt;&gt;();</span><br><span class="line">        ListNode tmp = head;</span><br><span class="line">        <span class="keyword">while</span> (tmp != <span class="keyword">null</span>) &#123;</span><br><span class="line">            stack.push(tmp);</span><br><span class="line">            tmp = tmp.next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span> (head != <span class="keyword">null</span> &amp;&amp; stack.pop().val == head.val) &#123;</span><br><span class="line">            head = head.next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> head == <span class="keyword">null</span> ? <span class="keyword">true</span> : <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 半个链表压栈</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">isPalindrome2</span><span class="params">(ListNode head)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (head == <span class="keyword">null</span> || head.next == <span class="keyword">null</span>) <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        ListNode slow = head.next;</span><br><span class="line">        ListNode fast = head;</span><br><span class="line">        <span class="keyword">while</span> (fast.next != <span class="keyword">null</span> &amp;&amp; fast.next.next != <span class="keyword">null</span>) &#123;</span><br><span class="line">            fast = fast.next.next;</span><br><span class="line">            slow = slow.next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 此时slow指向中点或者对称轴的下一个</span></span><br><span class="line">        Stack&lt;ListNode&gt; stack = <span class="keyword">new</span> Stack&lt;&gt;();</span><br><span class="line">        <span class="keyword">while</span> (slow != <span class="keyword">null</span>) &#123;</span><br><span class="line">            stack.push(slow);</span><br><span class="line"><span class="comment">//            System.out.print(slow.val + &quot;_&quot;);</span></span><br><span class="line">            slow = slow.next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span> (!stack.isEmpty()) &#123;</span><br><span class="line">            <span class="keyword">if</span> (head.val != stack.pop().val) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            head = head.next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 用偶数个举例，如链表为 1 -&gt; 2 -&gt; 3 -&gt; 4 -&gt; 5 -&gt; 6</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">isPalindrome3</span><span class="params">(ListNode head)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (head == <span class="keyword">null</span> || head.next == <span class="keyword">null</span>) <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// step1：找到中点位置，偶数为对称轴前一个，奇数为中点</span></span><br><span class="line">        ListNode slow = head;</span><br><span class="line">        ListNode fast = head;</span><br><span class="line">        <span class="keyword">while</span> (fast.next != <span class="keyword">null</span> &amp;&amp; fast.next.next != <span class="keyword">null</span>) &#123;</span><br><span class="line">            fast = fast.next.next;</span><br><span class="line">            slow = slow.next;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// step2：反转后半部分链表</span></span><br><span class="line">        <span class="comment">// 此时 slow 指向中点或者对称轴的前一个，也就是相当于反转部分的头结点</span></span><br><span class="line">        <span class="comment">// 即 slow 指向 3，接下来要反转后面部分得到：1 -&gt; 2 -&gt; 3 &lt;- 4 &lt;- 5 &lt;- 6</span></span><br><span class="line">        fast = slow.next;</span><br><span class="line">        ListNode tmp = <span class="keyword">null</span>;</span><br><span class="line">        slow.next = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">while</span> (fast != <span class="keyword">null</span>) &#123;</span><br><span class="line">            tmp = fast.next;</span><br><span class="line">            fast.next = slow;</span><br><span class="line">            slow = fast;</span><br><span class="line">            fast = tmp;</span><br><span class="line">        &#125;</span><br><span class="line">        tmp = slow; <span class="comment">// 指向最后一个节点（或者后部分链表的头结点）这里后面会用到</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// step3：将两边链表分别遍历比对</span></span><br><span class="line">        <span class="comment">// 此时slow指向反转链表的首节点，也就是原链表的最后一个</span></span><br><span class="line">        <span class="comment">// 1 -&gt; 2 -&gt; 3 &lt;- 4 &lt;- 5 &lt;- 6 slow 指向 6</span></span><br><span class="line">        <span class="comment">// 然后我们依次遍历两边的链表</span></span><br><span class="line">        fast = head;</span><br><span class="line">        <span class="keyword">boolean</span> ans = <span class="keyword">true</span>;</span><br><span class="line">        <span class="keyword">while</span> (fast != <span class="keyword">null</span> &amp;&amp; slow != <span class="keyword">null</span>) &#123;</span><br><span class="line"><span class="comment">//            System.out.print(&quot;fast:&quot; + fast.val + &quot;,slow:&quot; + slow.val + &quot;\n&quot;);</span></span><br><span class="line">            <span class="keyword">if</span> (fast.val != slow.val) &#123;</span><br><span class="line">                ans = <span class="keyword">false</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            fast = fast.next;</span><br><span class="line">            slow = slow.next;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// step4：链表复原</span></span><br><span class="line">        <span class="comment">// 此时 slow 指向 3，fast 指向 null</span></span><br><span class="line">        <span class="comment">// 如果是奇数个 slow、fast 都指向 null，所以要重新赋值</span></span><br><span class="line">        slow = tmp;</span><br><span class="line">        fast = slow.next;</span><br><span class="line">        <span class="keyword">while</span> (fast != <span class="keyword">null</span>) &#123;</span><br><span class="line">            tmp = fast.next;</span><br><span class="line">            fast.next = slow;</span><br><span class="line">            slow = fast;</span><br><span class="line">            fast = tmp;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        ListNode head = <span class="keyword">null</span>;</span><br><span class="line">        printLinkedList(head);</span><br><span class="line">        System.out.print(isPalindrome1(head) + <span class="string">&quot; | &quot;</span>);</span><br><span class="line">        System.out.print(isPalindrome2(head) + <span class="string">&quot; | &quot;</span>);</span><br><span class="line">        System.out.println(isPalindrome3(head));</span><br><span class="line"></span><br><span class="line">        head = <span class="keyword">new</span> ListNode(<span class="number">1</span>);</span><br><span class="line">        head.next = <span class="keyword">new</span> ListNode(<span class="number">2</span>);</span><br><span class="line">        printLinkedList(head);</span><br><span class="line">        System.out.print(isPalindrome1(head) + <span class="string">&quot; | &quot;</span>);</span><br><span class="line">        System.out.print(isPalindrome2(head) + <span class="string">&quot; | &quot;</span>);</span><br><span class="line">        System.out.println(isPalindrome3(head));</span><br><span class="line"></span><br><span class="line">        head = <span class="keyword">new</span> ListNode(<span class="number">1</span>);</span><br><span class="line">        head.next = <span class="keyword">new</span> ListNode(<span class="number">2</span>);</span><br><span class="line">        head.next.next = <span class="keyword">new</span> ListNode(<span class="number">1</span>);</span><br><span class="line">        printLinkedList(head);</span><br><span class="line">        System.out.print(isPalindrome1(head) + <span class="string">&quot; | &quot;</span>);</span><br><span class="line">        System.out.print(isPalindrome2(head) + <span class="string">&quot; | &quot;</span>);</span><br><span class="line">        System.out.println(isPalindrome3(head));</span><br><span class="line"></span><br><span class="line">        head = <span class="keyword">new</span> ListNode(<span class="number">1</span>);</span><br><span class="line">        head.next = <span class="keyword">new</span> ListNode(<span class="number">2</span>);</span><br><span class="line">        head.next.next = <span class="keyword">new</span> ListNode(<span class="number">3</span>);</span><br><span class="line">        head.next.next.next = <span class="keyword">new</span> ListNode(<span class="number">4</span>);</span><br><span class="line">        printLinkedList(head);</span><br><span class="line">        System.out.print(isPalindrome1(head) + <span class="string">&quot; | &quot;</span>);</span><br><span class="line">        System.out.print(isPalindrome2(head) + <span class="string">&quot; | &quot;</span>);</span><br><span class="line">        System.out.println(isPalindrome3(head));</span><br><span class="line"></span><br><span class="line">        head = <span class="keyword">new</span> ListNode(<span class="number">1</span>);</span><br><span class="line">        head.next = <span class="keyword">new</span> ListNode(<span class="number">2</span>);</span><br><span class="line">        head.next.next = <span class="keyword">new</span> ListNode(<span class="number">3</span>);</span><br><span class="line">        head.next.next.next = <span class="keyword">new</span> ListNode(<span class="number">2</span>);</span><br><span class="line">        head.next.next.next.next = <span class="keyword">new</span> ListNode(<span class="number">3</span>);</span><br><span class="line">        printLinkedList(head);</span><br><span class="line">        System.out.print(isPalindrome1(head) + <span class="string">&quot; | &quot;</span>);</span><br><span class="line">        System.out.print(isPalindrome2(head) + <span class="string">&quot; | &quot;</span>);</span><br><span class="line">        System.out.println(isPalindrome3(head));</span><br><span class="line"></span><br><span class="line">        head = <span class="keyword">new</span> ListNode(<span class="number">1</span>);</span><br><span class="line">        head.next = <span class="keyword">new</span> ListNode(<span class="number">2</span>);</span><br><span class="line">        head.next.next = <span class="keyword">new</span> ListNode(<span class="number">3</span>);</span><br><span class="line">        head.next.next.next = <span class="keyword">new</span> ListNode(<span class="number">4</span>);</span><br><span class="line">        head.next.next.next.next = <span class="keyword">new</span> ListNode(<span class="number">3</span>);</span><br><span class="line">        head.next.next.next.next.next = <span class="keyword">new</span> ListNode(<span class="number">2</span>);</span><br><span class="line">        head.next.next.next.next.next.next = <span class="keyword">new</span> ListNode(<span class="number">1</span>);</span><br><span class="line">        printLinkedList(head);</span><br><span class="line">        System.out.print(isPalindrome1(head) + <span class="string">&quot; | &quot;</span>);</span><br><span class="line">        System.out.print(isPalindrome2(head) + <span class="string">&quot; | &quot;</span>);</span><br><span class="line">        System.out.println(isPalindrome3(head));</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// Output</span></span><br><span class="line">Linked List: </span><br><span class="line"><span class="keyword">true</span> | <span class="keyword">true</span> | <span class="keyword">true</span></span><br><span class="line">Linked List: <span class="number">1</span> <span class="number">2</span> </span><br><span class="line"><span class="keyword">false</span> | <span class="keyword">false</span> | <span class="keyword">false</span></span><br><span class="line">Linked List: <span class="number">1</span> <span class="number">2</span> <span class="number">1</span> </span><br><span class="line"><span class="keyword">true</span> | <span class="keyword">true</span> | <span class="keyword">true</span></span><br><span class="line">Linked List: <span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span> </span><br><span class="line"><span class="keyword">false</span> | <span class="keyword">false</span> | <span class="keyword">false</span></span><br><span class="line">Linked List: <span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">2</span> <span class="number">3</span> </span><br><span class="line"><span class="keyword">false</span> | <span class="keyword">false</span> | <span class="keyword">false</span></span><br><span class="line">Linked List: <span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span> <span class="number">3</span> <span class="number">2</span> <span class="number">1</span> </span><br><span class="line"><span class="keyword">true</span> | <span class="keyword">true</span> | <span class="keyword">true</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> LeetCode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 链表 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git-个人记录</title>
      <link href="2021/02/18/Git%E5%AD%A6%E4%B9%A0%EF%BC%88%E4%B8%AA%E4%BA%BA%E8%AE%B0%E5%BD%95%EF%BC%89/"/>
      <url>2021/02/18/Git%E5%AD%A6%E4%B9%A0%EF%BC%88%E4%B8%AA%E4%BA%BA%E8%AE%B0%E5%BD%95%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<hr><h1 id="Git-使用"><a href="#Git-使用" class="headerlink" title="Git 使用"></a><strong>Git</strong> 使用</h1><blockquote><h3 id="Git是目前世界上最先进的分布式版本控制系统。"><a href="#Git是目前世界上最先进的分布式版本控制系统。" class="headerlink" title="Git是目前世界上最先进的分布式版本控制系统。"></a><strong>Git是目前世界上最先进的分布式版本控制系统。</strong></h3></blockquote><hr><h2 id="一、安装方面"><a href="#一、安装方面" class="headerlink" title="一、安装方面"></a>一、安装方面</h2><ol><li><p>安装 git </p><p>官网：<a href="https://git-scm.com/">https://git-scm.com/</a></p><p>淘宝镜像下载：<a href="http://npm.taobao.org/mirrors/git-for-windows/">http://npm.taobao.org/mirrors/git-for-windows/</a> </p></li></ol><p>  <strong>Git Bash：</strong>Unix与Linux风格的命令行，使用最多，推荐最多</p><p>  <strong>Git CMD：</strong>Windows风格的命令行</p><p>  <strong>Git GUI</strong>：图形界面的Git，不建议初学者使用，尽量先熟悉常用命令</p><blockquote><p><strong>基本 Linux 命令</strong></p><ul><li><p>cd ：改变目录。</p></li><li><p>cd . . 回退到上一个目录，直接 cd 进入默认目录</p></li><li><p>pwd : 显示当前所在的目录路径。</p></li><li><p>ls(ll):  都是列出当前目录中的所有文件, ll更为详细。</p></li><li><p>touch :文件</p></li><li><p>vi ：新建文件并编辑</p></li><li><p>rm:  删除文件</p></li><li><p>mkdir:  新建文件夹。</p></li><li><p>rm -r :  删除文件夹</p></li><li><p>mv 移动文件/ 文件重命名，必须保证文件和目标文件夹在同一目录下。</p></li><li><p>reset：重新初始化终端/清屏。</p></li><li><p>clear：清屏。</p></li><li><p>history：查看命令历史。</p></li><li><p>help：帮助。</p></li><li><p>exit：退出。</p></li><li><p>#：表示注释</p></li></ul></blockquote><ol start="2"><li><p><strong>Git</strong> 配置</p><p>查看配置：<strong>git config -l</strong></p><p><img src= "/img/loading2.gif" data-lazy-src="https://gitee.com/MingHuifan/image/raw/master/20210208163207.png" alt="image-20210208163206086"></p><p>查看不同级别的配置文件：</p></li></ol><ul><li>系统 config ：<strong>git config –system –list</strong></li><li>用户 <strong>global</strong> ：<strong>git config –global –list</strong></li></ul><p><img src= "/img/loading2.gif" data-lazy-src="https://gitee.com/MingHuifan/image/raw/master/20210208163639.png"></p><pre><code>  git 相关配置文件：    - Git\etc\gitconfig ：Git 安装目录下的 gitconfig            –system 系统级别  - C:\Users\用户名\.gotconfig ：只适用于当前登录用户的配置     –global 全局</code></pre><ol start="4"><li><p><strong>设置用户名与邮箱</strong></p><ul><li>法一单独配置：引号要不要都可以 如：<br>  git config –global user.name “MingHuifan”<br>  git config –global user.email “<a href="mailto:&#120;&#120;&#x78;&#x78;&#x78;&#64;&#x71;&#113;&#x2e;&#x63;&#x6f;&#109;">&#120;&#120;&#x78;&#x78;&#x78;&#64;&#x71;&#113;&#x2e;&#x63;&#x6f;&#109;</a>“</li><li>法二文件写：<br>  git config –global –edit  会进入.gitconfig文件编辑，把name和email写进去 :wq 退出并保存<br>  <img src= "/img/loading2.gif" data-lazy-src="https://gitee.com/MingHuifan/image/raw/master/20210208165404.png" alt="image-20210208165359679"></li></ul></li><li><p>生成 <strong>SSH</strong> 公钥</p><p> 设置本机绑定 SSH 公钥，实现免密登录</p><p> 在 <strong>C:\Users\用户名\ .ssh 目录</strong></p><p> 如果没有则用：<strong>ssh -keygen</strong> 生成，一路回车即可</p><p> 然后进去 <strong>C:\Users\用户名\ .ssh</strong> 目录 有一个 <strong>.pub</strong> 后缀的文件，这是公钥</p></li><li><p>在 <strong>gitee</strong> 设置公钥，github 一样</p><p> <img src= "/img/loading2.gif" data-lazy-src="https://gitee.com/MingHuifan/image/raw/master/20210208175338.png" alt="image-20210208175337489"></p></li></ol><blockquote><p><strong>然后就是如何使用 git push 到 github 或者 gitee 上了</strong></p></blockquote><h2 id="二、操作方面"><a href="#二、操作方面" class="headerlink" title="二、操作方面"></a>二、操作方面</h2><p><img src= "/img/loading2.gif" data-lazy-src="https://gitee.com/MingHuifan/image/raw/master/20210208223330.png" alt="image-20210208223324255"></p><hr><p>前序工作已经完成，接下来是如何操作</p><ol><li><p>在 <strong>github</strong> 上创建一个仓库（<strong>Repository</strong>）</p><p> <img src= "/img/loading2.gif" data-lazy-src="https://gitee.com/MingHuifan/image/raw/master/20210208175930.png" alt="image-20210208175929149"></p></li><li><p>然后克隆到本地</p><p> <img src= "/img/loading2.gif" data-lazy-src="C:\Users\FanMingHui\AppData\Roaming\Typora\typora-user-images\image-20210208180153826.png" alt="image-20210208180153826"></p></li><li><p>然后下载到你的本地仓库</p><ul><li><p>右键选择 <strong>git Bash Here</strong>  —&gt;  <strong>git clone + [url]</strong> </p><p>  然后就会有一个 <strong>.git</strong> 的目录</p></li><li><p>可以下载到你的项目路径中，然后就可以用命令操作了</p></li><li><p>或者复制到其他的路径中，**.git**文件绑定了你的远程仓库，所以只要复制到任何地方都可以</p><ul><li>考虑一种情况：我从远程仓库下载并保存在 E:\A\ 目录下那么 A 目录下就有 .git （该文件绑定了一个远程仓库），我就可以操作本地仓库 A ，然后我在把 .git 文件复制到 E:\B\ 目录下，那么我是不是可以将两个的文件叠加的上床到远程仓库中<br>  其实并不能，并且两个路径不可以同时使用 <strong>git</strong> ，只能使用一个文件路径下的 <strong>git</strong></li></ul></li></ul></li><li><p>几个命令</p><blockquote><ul><li>git add .</li><li>git commit -m 说明</li><li>git push</li><li>git pull</li><li>git rm -r –cached filePath : 清除缓存-指定路径</li><li>git rm -r –cached . ：清除缓存-清除全部缓存</li><li>git clone</li><li>git remote add origin SSH地址：链接远程仓库地址</li><li>git remote remove origin：移除远程仓库地址</li><li>git remove -v：查看远程仓库地址</li></ul></blockquote></li></ol>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
            <tag> 记录 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
